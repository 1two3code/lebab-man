{"version":3,"sources":["electron-main.ts"],"names":["createWindow"],"mappings":"AAAA;;;GAGG;AACH,CAAC;IACG,YAAY,CAAC;IAEb,IAAM,QAAQ,GAAqC,OAAO,CAAC,UAAU,CAAC,CAAC;IACvE,sCAAsC;IACtC,IAAM,GAAG,GAAiB,QAAQ,CAAC,GAAG,CAAC;IAEvC,8EAA8E;IAC9E,2EAA2E;IAC3E,IAAI,UAAkC,CAAC;IAEvC;QACIA,6BAA6BA;QAC7BA,UAAUA,GAAGA,IAAIA,QAAQA,CAACA,aAAaA,CAACA;YACpCA,KAAKA,EAAEA,GAAGA,EAAEA,MAAMA,EAAEA,GAAGA;YACvBA,cAAcA,EAAEA,IAAIA;YACpBA,eAAeA,EAAEA,IAAIA;SACxBA,CAACA,CAACA;QAEHA,sCAAsCA;QACtCA,UAAUA,CAACA,OAAOA,CAACA,SAASA,GAAGA,SAASA,GAAGA,wBAAwBA,CAACA,CAACA;QAErEA,qBAAqBA;QACrBA,wCAAwCA;QAExCA,qCAAqCA;QACrCA,UAAUA,CAACA,EAAEA,CAACA,QAAQA,EAAEA;YACpBA,iEAAiEA;YACjEA,mEAAmEA;YACnEA,oDAAoDA;YACpDA,UAAUA,GAAGA,IAAIA,CAACA;QACtBA,CAACA,CAACA,CAACA;IACPA,CAACA;IAED,wDAAwD;IACxD,yDAAyD;IACzD,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;IAE9B,oCAAoC;IACpC,GAAG,CAAC,EAAE,CAAC,mBAAmB,EAAE;QACxB,2DAA2D;QAC3D,8DAA8D;QAC9D,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;YAChC,GAAG,CAAC,IAAI,EAAE,CAAC;QACf,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,GAAG,CAAC,EAAE,CAAC,UAAU,EAAE;QACf,gEAAgE;QAChE,4DAA4D;QAC5D,EAAE,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC;YACtB,YAAY,EAAE,CAAC;QACnB,CAAC;IACL,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,EAAE,CAAC","file":"electron-main.js","sourcesContent":["/*\r\n * Entry point for desktop version.  This is built with electron:\r\n * http://electron.atom.io/\r\n */\r\n(() => {\r\n    'use strict';\r\n\r\n    const electron: Electron.ElectronMainAndRenderer = require('electron');\r\n    // Module to control application life.\r\n    const app: Electron.App = electron.app;\r\n\r\n    // Keep a global reference of the window object, if you don't, the window will\r\n    // be closed automatically when the JavaScript object is garbage collected.\r\n    let mainWindow: Electron.BrowserWindow;\r\n\r\n    function createWindow() {\r\n        // Create the browser window.\r\n        mainWindow = new electron.BrowserWindow({\r\n            width: 224, height: 288,\r\n            useContentSize: true,\r\n            autoHideMenuBar: true\r\n        });\r\n\r\n        // and load the index.html of the app.\r\n        mainWindow.loadURL('file://' + __dirname + '/../desktop-index.html');\r\n\r\n        // Open the DevTools.\r\n        //mainWindow.webContents.openDevTools();\r\n\r\n        // Emitted when the window is closed.\r\n        mainWindow.on('closed', () => {\r\n            // Dereference the window object, usually you would store windows\r\n            // in an array if your app supports multi windows, this is the time\r\n            // when you should delete the corresponding element.\r\n            mainWindow = null;\r\n        });\r\n    }\r\n\r\n    // This method will be called when Electron has finished\r\n    // initialization and is ready to create browser windows.\r\n    app.on('ready', createWindow);\r\n\r\n    // Quit when all windows are closed.\r\n    app.on('window-all-closed', () => {\r\n        // On OS X it is common for applications and their menu bar\r\n        // to stay active until the user quits explicitly with Cmd + Q\r\n        if (process.platform !== 'darwin') {\r\n            app.quit();\r\n        }\r\n    });\r\n\r\n    app.on('activate', () => {\r\n        // On OS X it's common to re-create a window in the app when the\r\n        // dock icon is clicked and there are no other windows open.\r\n        if (mainWindow === null) {\r\n            createWindow();\r\n        }\r\n    });\r\n\r\n})();"],"sourceRoot":"/source/"}