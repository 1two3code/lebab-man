{"version":3,"sources":["pacman/Clyde.ts"],"names":["pacman","pacman.Clyde","pacman.Clyde.constructor","pacman.Clyde.reset","pacman.Clyde.updatePositionChasingPacman"],"mappings":";;;;;AAAA,IAAO,MAAM,CAmDZ;AAnDD,WAAO,MAAM,EAAC,CAAC;IACXA,YAAYA,CAACA;IAEbA;;OAEGA;IACHA;QAA2BC,yBAAKA;QAE5BA;;WAEGA;QACHA,eAAYA,IAAgBA;YACxBC,kBAAMA,IAAIA,EAAEA,CAACA,GAAGA,iBAAUA,CAACA,WAAWA,EAAEA,EAAEA,CAACA,CAACA;QAChDA,CAACA;QAEDD,qBAAKA,GAALA;YACIE,gBAAKA,CAACA,KAAKA,WAAEA,CAACA;YACdA,IAAIA,CAACA,SAASA,GAAGA,gBAASA,CAACA,KAAKA,CAACA;YACjCA,IAAIA,CAACA,WAAWA,CAACA,EAAEA,GAAGA,iBAAUA,CAACA,SAASA,GAAGA,iBAAUA,CAACA,SAASA,GAAGA,CAACA,GAAGA,CAACA,EACrEA,EAAEA,GAAGA,iBAAUA,CAACA,SAASA,GAAGA,iBAAUA,CAACA,SAASA,GAAGA,CAACA,CAACA,CAACA;YAC1DA,IAAIA,CAACA,WAAWA,GAAGA,kBAAWA,CAACA,MAAMA,CAACA;QAC1CA,CAACA;QAEDF;;;;WAIGA;QACHA,2CAA2BA,GAA3BA,UAA4BA,IAAUA;YAElCG,IAAMA,UAAUA,GAAWA,IAAIA,CAACA,UAAUA,CAACA;YAE3CA,gDAAgDA;YAChDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,cAAcA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAC5BA,IAAIA,CAACA,uBAAuBA,CAACA,IAAIA,CAACA,CAACA;YACvCA,CAACA;YAIDA,IAAIA,CAACA,CAACA;gBACFA,IAAIA,CAACA,0BAA0BA,CAACA,UAAUA,CAACA,CAACA;YAChDA,CAACA;YAEDA,qDAAqDA;YACrDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,QAAQA,IAAIA,IAAIA,CAACA,mBAAmBA,CAACA,CAACA,CAACA;gBAC5CA,IAAIA,CAACA,WAAWA,GAAGA,kBAAWA,CAACA,UAAUA,CAACA;YAC9CA,CAACA;QAELA,CAACA;QAELH,YAACA;IAADA,CA5CAD,AA4CCC,EA5C0BD,YAAKA,EA4C/BA;IA5CYA,YAAKA,QA4CjBA,CAAAA;AACLA,CAACA,EAnDM,MAAM,KAAN,MAAM,QAmDZ","file":"pacman/Clyde.js","sourcesContent":["module pacman {\r\n    'use strict';\r\n\r\n    /**\r\n     * Clyde, the orange ghost.\r\n     */\r\n    export class Clyde extends Ghost {\r\n\r\n        /**\r\n         * Constructor.\r\n         */\r\n        constructor(game: PacmanGame) {\r\n            super(game, 3 * PacmanGame.SPRITE_SIZE, 14);\r\n        }\r\n\r\n        reset() {\r\n            super.reset();\r\n            this.direction = Direction.SOUTH;\r\n            this.setLocation(16 * PacmanGame.TILE_SIZE - PacmanGame.TILE_SIZE / 2 - 4,\r\n                15 * PacmanGame.TILE_SIZE - PacmanGame.TILE_SIZE / 2);\r\n            this.motionState = MotionState.IN_BOX;\r\n        }\r\n\r\n        /**\r\n         * Updates an actor's position.\r\n         *\r\n         * @param maze The maze in which the actor is moving.\r\n         */\r\n        updatePositionChasingPacman(maze: Maze) {\r\n\r\n            const moveAmount: number = this.moveAmount;\r\n\r\n            // Pick a new random direction at intersections.\r\n            if (this.atIntersection(maze)) {\r\n                this.changeDirectionFallback(maze);\r\n            }\r\n\r\n            // Not at an intersection, so we should be able to keep going\r\n            // in our current direction.\r\n            else {\r\n                this.continueInCurrentDirection(moveAmount);\r\n            }\r\n\r\n            // Switch over to scatter mode if it's time to do so.\r\n            if (game.playTime >= this.startScatteringTime) {\r\n                this.motionState = MotionState.SCATTERING;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}