{"version":3,"sources":["../app/pacman/Clyde.ts"],"names":[],"mappings":";;;;;AAAA,IAAO,MAAM,CAmDZ;AAnDD,WAAO,MAAM,EAAC,CAAC;IACX,YAAY,CAAC;IAEb;;OAEG;IACH;QAA2B,yBAAK;QAE5B;;WAEG;QACH,eAAY,IAAgB;YACxB,kBAAM,IAAI,EAAE,CAAC,GAAG,iBAAU,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QAChD,CAAC;QAED,qBAAK,GAAL;YACI,gBAAK,CAAC,KAAK,WAAE,CAAC;YACd,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;YACjC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,iBAAU,CAAC,SAAS,GAAG,iBAAU,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,EACrE,EAAE,GAAG,iBAAU,CAAC,SAAS,GAAG,iBAAU,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;YAC1D,IAAI,CAAC,WAAW,GAAG,kBAAW,CAAC,MAAM,CAAC;QAC1C,CAAC;QAED;;;;WAIG;QACH,2CAA2B,GAA3B,UAA4B,IAAU;YAElC,IAAM,UAAU,GAAW,IAAI,CAAC,UAAU,CAAC;YAE3C,gDAAgD;YAChD,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;YACvC,CAAC;YAID,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC;YAChD,CAAC;YAED,qDAAqD;YACrD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBAC5C,IAAI,CAAC,WAAW,GAAG,kBAAW,CAAC,UAAU,CAAC;YAC9C,CAAC;QAEL,CAAC;QAEL,YAAC;IAAD,CA5CA,AA4CC,CA5C0B,YAAK,GA4C/B;IA5CY,YAAK,QA4CjB,CAAA;AACL,CAAC,EAnDM,MAAM,KAAN,MAAM,QAmDZ","file":"Clyde.js","sourcesContent":["module pacman {\r\n    'use strict';\r\n\r\n    /**\r\n     * Clyde, the orange ghost.\r\n     */\r\n    export class Clyde extends Ghost {\r\n\r\n        /**\r\n         * Constructor.\r\n         */\r\n        constructor(game: PacmanGame) {\r\n            super(game, 3 * PacmanGame.SPRITE_SIZE, 14);\r\n        }\r\n\r\n        reset() {\r\n            super.reset();\r\n            this.direction = Direction.SOUTH;\r\n            this.setLocation(16 * PacmanGame.TILE_SIZE - PacmanGame.TILE_SIZE / 2 - 4,\r\n                15 * PacmanGame.TILE_SIZE - PacmanGame.TILE_SIZE / 2);\r\n            this.motionState = MotionState.IN_BOX;\r\n        }\r\n\r\n        /**\r\n         * Updates an actor's position.\r\n         *\r\n         * @param maze The maze in which the actor is moving.\r\n         */\r\n        updatePositionChasingPacman(maze: Maze) {\r\n\r\n            const moveAmount: number = this.moveAmount;\r\n\r\n            // Pick a new random direction at intersections.\r\n            if (this.atIntersection(maze)) {\r\n                this.changeDirectionFallback(maze);\r\n            }\r\n\r\n            // Not at an intersection, so we should be able to keep going\r\n            // in our current direction.\r\n            else {\r\n                this.continueInCurrentDirection(moveAmount);\r\n            }\r\n\r\n            // Switch over to scatter mode if it's time to do so.\r\n            if (game.playTime >= this.startScatteringTime) {\r\n                this.motionState = MotionState.SCATTERING;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n"]}