{"version":3,"sources":["../app/pacman/Fruit.ts"],"names":[],"mappings":";;;;;AAAA,IAAO,MAAM,CAkEZ;AAlED,WAAO,MAAM,EAAC,CAAC;IACX,YAAY,CAAC;IAEb;QAA2B,yBAAW;QAYlC;YACI,kBAAM,CAAC,CAAC,CAAC;YAET,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;YAC/C,IAAI,KAAK,GAAW,IAAI,CAAC,KAAK,CAAC;YAC/B,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gBACZ,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC;YAED,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC/C,CAAC;QASD,sBAAI,8BAAW;YAPf;;;;;;eAMG;iBACH;gBACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;YAC7B,CAAC;;;WAAA;QAED;;;;;WAKG;QACH,oCAAoB,GAApB;YACI,MAAM,CAAC,YAAY,CAAC,CAAC,qCAAqC;QAC9D,CAAC;QAED;;;;WAIG;QACH,qBAAK,GAAL,UAAM,GAA6B;YAC/B,IAAI,WAAW,GAAW,iBAAU,CAAC,WAAW,CAAC;YACjD,IAAI,IAAI,GAAW,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;YAC3C,IAAI,IAAI,GAAW,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAChD,CAAC;QAED,kCAAkB,GAAlB,UAAmB,IAAU;YACzB,kCAAkC;QACtC,CAAC;QAvDD,2DAA2D;QAC3D,wDAAwD;QACzC,UAAI,GAAa,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QACpD,UAAI,GAAa,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAC5C,eAAS,GAAa,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAE,CAAC;QAoDtE,YAAC;IAAD,CA9DA,AA8DC,CA9D0B,kBAAW,GA8DrC;IA9DY,YAAK,QA8DjB,CAAA;AACL,CAAC,EAlEM,MAAM,KAAN,MAAM,QAkEZ","file":"Fruit.js","sourcesContent":["module pacman {\r\n    'use strict';\r\n\r\n    export class Fruit extends _BaseSprite {\r\n\r\n        private _row: number;\r\n        private _col: number;\r\n        private _pointsIndex: number;\r\n\r\n        // 0=Cherry, 1=Strawberry, 2=Peach, 3=Yellow bell, 4=Apple,\r\n        // 5=Green thing (grapes?), 6=Space Invaders ship, 7=Key\r\n        private static COLS: number[] = [ 12, 13, 12, 13, 13, 12, 13, 13 ];\r\n        private static ROWS: number[] = [ 4, 4, 5, 5, 2, 6, 6, 3 ];\r\n        private static PTS_INDEX: number[] = [ 0, 2, 4, 5, 10, 7, 9, 11 ];\r\n\r\n        constructor() {\r\n            super(1);\r\n\r\n            this.setLocation(game.PENALTY_BOX_EXIT_X, 140);\r\n            let level: number = game.level;\r\n            if (level > 7) { // Level 8+ => any fruit is possible\r\n                level = game.randomInt(8);\r\n            }\r\n\r\n            this._col = Fruit.COLS[level];\r\n            this._row = Fruit.ROWS[level];\r\n            this._pointsIndex = Fruit.PTS_INDEX[level];\r\n        }\r\n\r\n        /**\r\n         * Returns the index into the \"points\" array that contains this\r\n         * fruit's point value.\r\n         *\r\n         * @return {number} The index into the \"points\" array that contains this\r\n         *         fruit's point value.\r\n         */\r\n        get pointsIndex(): number {\r\n            return this._pointsIndex;\r\n        }\r\n\r\n        /**\r\n         * Returns the number of milliseconds that should pass between the times\r\n         * this fruit moves.\r\n         *\r\n         * @return The update delay, in milliseconds.\r\n         */\r\n        getUpdateDelayMillis(): number {\r\n            return 100000000000; // Make large, as fruit doesn't move.\r\n        }\r\n\r\n        /**\r\n         * Paints this sprite at its current location.\r\n         *\r\n         * @param {CanvasRenderingContext2D} ctx The rendering context.\r\n         */\r\n        paint(ctx: CanvasRenderingContext2D) {\r\n            let SPRITE_SIZE: number = PacmanGame.SPRITE_SIZE;\r\n            let srcX: number = this._col * SPRITE_SIZE;\r\n            let srcY: number = this._row * SPRITE_SIZE;\r\n            game.drawSprite(this.x, this.y, srcX, srcY);\r\n        }\r\n\r\n        updatePositionImpl(maze: Maze) {\r\n            // Do nothing; fruit doesn't move.\r\n        }\r\n    }\r\n}\r\n"]}