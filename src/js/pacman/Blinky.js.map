{"version":3,"sources":["pacman/Blinky.ts"],"names":["pacman","pacman.Blinky","pacman.Blinky.constructor","pacman.Blinky.reset","pacman.Blinky.updatePositionChasingPacman"],"mappings":"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","file":"pacman/Blinky.js","sourcesContent":["module pacman {\r\n    'use strict';\r\n\r\n    /**\r\n     * Blinky, the red ghost.  Blinky always takes the shortest route to Pacman\r\n     * when chasing him.\r\n     */\r\n    export class Blinky extends Ghost {\r\n\r\n        /**\r\n         * Constructor.\r\n         */\r\n        constructor(game: PacmanGame) {\r\n            super(game, 0 * PacmanGame.SPRITE_SIZE, 0); // Not initially in the penalty box\r\n        }\r\n\r\n        reset() {\r\n            super.reset();\r\n            this.direction = Direction.WEST;\r\n            this.setLocation(this.game.PENALTY_BOX_EXIT_X, this.game.PENALTY_BOX_EXIT_Y);\r\n            this.motionState = MotionState.SCATTERING;\r\n        }\r\n\r\n        /**\r\n         * Updates an actor's position.\r\n         *\r\n         * @param maze The maze in which the actor is moving.\r\n         */\r\n        updatePositionChasingPacman(maze: Maze) {\r\n\r\n            // Logic:\r\n            // If at an intersection, do a breadth-first search for the shortest\r\n            // route to PacMan, and go in that direction.\r\n\r\n            let moveAmount: number = this.moveAmount;\r\n\r\n            if (this.atIntersection(maze)) { // If the ghost can turn...\r\n\r\n                let fromRow: number = this.row;\r\n                let fromCol: number = this.column;\r\n                let toRow: number = game.pacman.row;\r\n                let toCol: number = game.pacman.column;\r\n                let node: MazeNode = maze.getPathBreadthFirst(fromRow, fromCol, toRow, toCol);\r\n\r\n                if (node == null) { // Happens only with \"God Mode\" enabled.\r\n                    this.changeDirectionFallback(maze);\r\n                }\r\n                else if (node.col < fromCol) {\r\n                    this.direction = Direction.WEST;\r\n                    this.incX(-moveAmount);\r\n                }\r\n                else if (node.col > fromCol) {\r\n                    this.direction = Direction.EAST;\r\n                    this.incX(moveAmount);\r\n                }\r\n                else if (node.row < fromRow) {\r\n                    this.direction = Direction.NORTH;\r\n                    this.incY(-moveAmount);\r\n                }\r\n                else if (node.row > fromRow) {\r\n                    this.direction = Direction.SOUTH;\r\n                    this.incY(moveAmount);\r\n                }\r\n\r\n            }\r\n\r\n            // Not at an intersection, so we should be able to keep going\r\n            // in our current direction.\r\n            else {\r\n                this.continueInCurrentDirection(moveAmount);\r\n            }\r\n\r\n            // Switch over to scatter mode if it's time to do so.\r\n            if (game.playTime >= this.startScatteringTime) {\r\n                this.motionState = MotionState.SCATTERING;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}