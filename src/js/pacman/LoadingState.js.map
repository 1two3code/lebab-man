{"version":3,"sources":["pacman/LoadingState.ts"],"names":["pacman","pacman.LoadingState","pacman.LoadingState.constructor","pacman.LoadingState.update","pacman.LoadingState.update.hexStrToInt"],"mappings":";;;;;AAAA,IAAO,MAAM,CA+EZ;AA/ED,WAAO,MAAM,EAAC,CAAC;IACXA,YAAYA,CAACA;IAEbA;QAAkCC,gCAAUA;QAKxCA;;;WAGGA;QACHA,sBAAYA,IAAmCA;YAC3CC,kBAAMA,IAAIA,CAACA,CAACA;YACZA,IAAIA,CAACA,aAAaA,GAAGA,KAAKA,CAACA;QAC/BA,CAACA;QAEDD,6BAAMA,GAANA,UAAOA,KAAaA;YAEhBE,IAAIA,CAACA,iBAAiBA,EAAEA,CAACA;YAEzBA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,aAAaA,CAACA,CAACA,CAACA;gBAEtBA,IAAIA,CAACA,aAAaA,GAAGA,IAAIA,CAACA;gBAC1BA,IAAMA,MAAIA,GAAaA,IAAIA,CAACA,IAAIA,CAACA;gBACjCA,IAAMA,MAAIA,GAAiBA,IAAIA,CAACA;gBAEhCA,uCAAuCA;gBACvCA,MAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,SAASA,EAAEA,wBAAwBA,CAACA,CAACA;gBAC1DA,MAAIA,CAACA,MAAMA,CAACA,MAAMA,CAACA;oBAEfA,MAAIA,CAACA,aAAaA,GAAGA,MAAIA,CAACA,MAAMA,CAACA,GAAGA,CAACA,SAASA,CAACA,CAACA;oBAEhDA,MAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,OAAOA,EAAEA,eAAeA,CAACA,CAACA;oBAC/CA,MAAIA,CAACA,MAAMA,CAACA,cAAcA,CAACA,MAAMA,EAAEA,cAAcA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBAC/DA,MAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,SAASA,EAAEA,sBAAsBA,EAAEA,IAAIA,CAACA,CAACA;oBAC9DA,MAAIA,CAACA,MAAMA,CAACA,cAAcA,CAACA,UAAUA,EAAEA,mBAAmBA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBACxEA,MAAIA,CAACA,MAAMA,CAACA,cAAcA,CAACA,QAAQA,EAAEA,gBAAgBA,EAAEA,EAAEA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA;oBACpEA,MAAIA,CAACA,MAAMA,CAACA,OAAOA,CAACA,QAAQA,EAAEA,oBAAoBA,CAACA,CAACA;oBACpDA,MAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,aAAMA,CAACA,cAAcA,EAAEA,+BAA+BA,CAACA,CAACA;oBAC7EA,MAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,aAAMA,CAACA,OAAOA,EAAEA,wBAAwBA,CAACA,CAACA;oBAC/DA,MAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,aAAMA,CAACA,OAAOA,EAAEA,wBAAwBA,CAACA,CAACA;oBAC/DA,MAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,aAAMA,CAACA,IAAIA,EAAEA,qBAAqBA,CAACA,CAACA;oBACzDA,MAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,aAAMA,CAACA,YAAYA,EAAEA,6BAA6BA,CAACA,CAACA;oBACzEA,MAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,aAAMA,CAACA,YAAYA,EAAEA,6BAA6BA,CAACA,CAACA;oBACzEA,MAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,aAAMA,CAACA,UAAUA,EAAEA,2BAA2BA,CAACA,CAACA;oBACrEA,MAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,aAAMA,CAACA,YAAYA,EAAEA,6BAA6BA,CAACA,CAACA;oBACzEA,MAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,aAAMA,CAACA,YAAYA,EAAEA,6BAA6BA,CAACA,CAACA;oBACzEA,MAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,aAAMA,CAACA,OAAOA,EAAEA,wBAAwBA,CAACA,CAACA;oBAC/DA,MAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,aAAMA,CAACA,KAAKA,EAAEA,sBAAsBA,CAACA,CAACA;oBAC3DA,MAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,aAAMA,CAACA,KAAKA,EAAEA,sBAAsBA,CAACA,CAACA;oBAC3DA,MAAIA,CAACA,MAAMA,CAACA,MAAMA,CAACA;wBAEfA,iDAAiDA;wBACjDA,qBAAqBA,GAAWA,IAAYC,MAAMA,CAACA,QAAQA,CAACA,GAAGA,EAAEA,EAAEA,CAACA,CAACA,CAACA,CAACA;wBACvED,IAAMA,SAASA,GAAYA,MAAIA,CAACA,MAAMA,CAACA,GAAGA,CAACA,QAAQA,CAACA,CAACA;wBACrDA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,SAASA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;4BAChDA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,GAAWA,CAACA,EAAEA,GAAGA,GAAGA,SAASA,CAACA,CAACA,CAACA,CAACA,MAAMA,EAAEA,GAAGA,EAAEA,EAAEA,CAACA;gCACzDA,SAASA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,GAAGA,SAASA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,WAAWA,CAACA,CAACA;4BAC3DA,CAACA;wBACLA,CAACA;wBAEDA,IAAMA,SAASA,GAAWA,GAAGA,CAACA,KAAKA,CAACA,eAAeA,CAACA,WAAWA,CAACA,CAACA;wBACjEA,EAAEA,CAACA,CAACA,SAASA,KAAKA,IAAIA,CAACA,CAACA,CAACA;4BACrBA,IAAMA,UAAUA,GAA2BA,MAAIA,CAACA,IAAIA,CAACA;4BACrDA,UAAUA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;wBAC5BA,CAACA;wBACDA,IAAIA,CAACA,CAACA;4BACFA,MAAIA,CAACA,QAAQA,CAACA,IAAIA,GAAGA,CAACA,cAAcA,CAACA,MAAIA,EAAEA,IAAIA,iBAAUA,EAAEA,CAACA,CAACA,CAACA;wBAClEA,CAACA;oBACLA,CAACA,CAACA,CAACA;gBAEPA,CAACA,CAACA,CAACA;YAEPA,CAACA;QAELA,CAACA;QAELF,mBAACA;IAADA,CA3EAD,AA2ECC,EA3EiCD,iBAAUA,EA2E3CA;IA3EYA,mBAAYA,eA2ExBA,CAAAA;AACLA,CAACA,EA/EM,MAAM,KAAN,MAAM,QA+EZ","file":"pacman/LoadingState.js","sourcesContent":["module pacman {\r\n    'use strict';\r\n\r\n    export class LoadingState extends _BaseState {\r\n\r\n        private _assetsLoaded: boolean;\r\n        private _loadingImage: any;\r\n\r\n        /**\r\n         * State that renders while resources are loading.\r\n         * @constructor\r\n         */\r\n        constructor(args?: gtp.Game | gtp.BaseStateArgs) {\r\n            super(args);\r\n            this._assetsLoaded = false;\r\n        }\r\n\r\n        update(delta: number) {\r\n\r\n            this.handleDefaultKeys();\r\n\r\n            if (!this._assetsLoaded) {\r\n\r\n                this._assetsLoaded = true;\r\n                const game: gtp.Game = this.game;\r\n                const self: LoadingState = this;\r\n\r\n                // Load assets used by this state first\r\n                game.assets.addImage('loading', 'res/loadingMessage.png');\r\n                game.assets.onLoad(() => {\r\n\r\n                    self._loadingImage = game.assets.get('loading');\r\n\r\n                    game.assets.addImage('title', 'res/title.png');\r\n                    game.assets.addSpriteSheet('font', 'res/font.png', 9, 7, 0, 0);\r\n                    game.assets.addImage('sprites', 'res/sprite_tiles.png', true);\r\n                    game.assets.addSpriteSheet('mapTiles', 'res/map_tiles.png', 8, 8, 0, 0);\r\n                    game.assets.addSpriteSheet('points', 'res/points.png', 18, 9, 0, 0);\r\n                    game.assets.addJson('levels', 'res/levelData.json');\r\n                    game.assets.addSound(Sounds.CHASING_GHOSTS, 'res/sounds/chasing_ghosts.wav');\r\n                    game.assets.addSound(Sounds.CHOMP_1, 'res/sounds/chomp_1.wav');\r\n                    game.assets.addSound(Sounds.CHOMP_2, 'res/sounds/chomp_2.wav');\r\n                    game.assets.addSound(Sounds.DIES, 'res/sounds/dies.wav');\r\n                    game.assets.addSound(Sounds.EATING_FRUIT, 'res/sounds/eating_fruit.wav');\r\n                    game.assets.addSound(Sounds.EATING_GHOST, 'res/sounds/eating_ghost.wav');\r\n                    game.assets.addSound(Sounds.EXTRA_LIFE, 'res/sounds/extra_life.wav');\r\n                    game.assets.addSound(Sounds.EYES_RUNNING, 'res/sounds/eyes_running.wav');\r\n                    game.assets.addSound(Sounds.INTERMISSION, 'res/sounds/intermission.wav');\r\n                    game.assets.addSound(Sounds.OPENING, 'res/sounds/opening.wav');\r\n                    game.assets.addSound(Sounds.SIREN, 'res/sounds/siren.wav');\r\n                    game.assets.addSound(Sounds.TOKEN, 'res/sounds/token.wav');\r\n                    game.assets.onLoad(() => {\r\n\r\n                        // Convert level data from hex strings to numbers\r\n                        function hexStrToInt(str: string): number { return parseInt(str, 16); }\r\n                        const levelData: any[][] = game.assets.get('levels');\r\n                        for (let i: number = 0; i < levelData.length; i++) {\r\n                            for (let row: number = 0; row < levelData[i].length; row++) {\r\n                                levelData[i][row] = levelData[i][row].map(hexStrToInt);\r\n                            }\r\n                        }\r\n\r\n                        const skipTitle: string = gtp.Utils.getRequestParam('skipTitle');\r\n                        if (skipTitle !== null) { // Allow empty strings\r\n                            const pacmanGame: PacmanGame = <PacmanGame>self.game;\r\n                            pacmanGame.startGame(0);\r\n                        }\r\n                        else {\r\n                            game.setState(new gtp.FadeOutInState(self, new TitleState()));\r\n                        }\r\n                    });\r\n\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}