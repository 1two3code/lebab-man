{"version":3,"sources":["../app/pacman/LoadingState.ts"],"names":[],"mappings":"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","file":"LoadingState.js","sourcesContent":["module pacman {\r\n    'use strict';\r\n\r\n    export class LoadingState extends _BaseState {\r\n\r\n        private _assetsLoaded: boolean;\r\n        private _loadingImage: any;\r\n\r\n        /**\r\n         * State that renders while resources are loading.\r\n         * @constructor\r\n         */\r\n        constructor(args?: gtp.Game | gtp.BaseStateArgs) {\r\n            super(args);\r\n            this._assetsLoaded = false;\r\n        }\r\n\r\n        private static hexStrToInt(str: string): number {\r\n            return parseInt(str, 16);\r\n        }\r\n\r\n        update(delta: number) {\r\n\r\n            this.handleDefaultKeys();\r\n\r\n            if (!this._assetsLoaded) {\r\n\r\n                this._assetsLoaded = true;\r\n                const game: gtp.Game = this.game;\r\n                const self: LoadingState = this;\r\n\r\n                // Load assets used by this state first\r\n                game.assets.addImage('loading', 'res/loadingMessage.png');\r\n                game.assets.onLoad(() => {\r\n\r\n                    self._loadingImage = game.assets.get('loading');\r\n\r\n                    game.assets.addImage('title', 'res/title.png');\r\n                    game.assets.addSpriteSheet('font', 'res/font.png', 9, 7, 0, 0);\r\n                    game.assets.addImage('sprites', 'res/sprite_tiles.png', true);\r\n                    game.assets.addSpriteSheet('mapTiles', 'res/map_tiles.png', 8, 8, 0, 0);\r\n                    game.assets.addSpriteSheet('points', 'res/points.png', 18, 9, 0, 0);\r\n                    game.assets.addJson('levels', 'res/levelData.json');\r\n                    game.assets.addSound(Sounds.CHASING_GHOSTS, 'res/sounds/chasing_ghosts.wav');\r\n                    game.assets.addSound(Sounds.CHOMP_1, 'res/sounds/chomp_1.wav');\r\n                    game.assets.addSound(Sounds.CHOMP_2, 'res/sounds/chomp_2.wav');\r\n                    game.assets.addSound(Sounds.DIES, 'res/sounds/dies.wav');\r\n                    game.assets.addSound(Sounds.EATING_FRUIT, 'res/sounds/eating_fruit.wav');\r\n                    game.assets.addSound(Sounds.EATING_GHOST, 'res/sounds/eating_ghost.wav');\r\n                    game.assets.addSound(Sounds.EXTRA_LIFE, 'res/sounds/extra_life.wav');\r\n                    game.assets.addSound(Sounds.EYES_RUNNING, 'res/sounds/eyes_running.wav');\r\n                    game.assets.addSound(Sounds.INTERMISSION, 'res/sounds/intermission.wav');\r\n                    game.assets.addSound(Sounds.OPENING, 'res/sounds/opening.wav');\r\n                    game.assets.addSound(Sounds.SIREN, 'res/sounds/siren.wav');\r\n                    game.assets.addSound(Sounds.TOKEN, 'res/sounds/token.wav');\r\n                    game.assets.onLoad(() => {\r\n\r\n                        // Convert level data from hex strings to numbers\r\n                        const levelData: any[][] = game.assets.get('levels');\r\n                        for (let i: number = 0; i < levelData.length; i++) {\r\n                            for (let row: number = 0; row < levelData[i].length; row++) {\r\n                                levelData[i][row] = levelData[i][row].map(LoadingState.hexStrToInt);\r\n                            }\r\n                        }\r\n\r\n                        const skipTitle: string = gtp.Utils.getRequestParam('skipTitle');\r\n                        if (skipTitle !== null) { // Allow empty strings\r\n                            const pacmanGame: PacmanGame = <PacmanGame>self.game;\r\n                            pacmanGame.startGame(0);\r\n                        }\r\n                        else {\r\n                            game.setState(new gtp.FadeOutInState(self, new TitleState()));\r\n                        }\r\n                    });\r\n\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n"]}