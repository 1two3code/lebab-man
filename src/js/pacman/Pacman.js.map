{"version":3,"sources":["../app/pacman/Pacman.ts"],"names":[],"mappings":";;;;;AAAA,IAAO,MAAM,CAkHZ;AAlHD,WAAO,MAAM,EAAC,CAAC;IACX,YAAY,CAAC;IAEb;QAA4B,0BAAW;QAInC;YACI,kBAAM,CAAC,CAAC,CAAC;YACT,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACzB,CAAC;QAED,qCAAoB,GAApB;YACI,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAED,4BAAW,GAAX,UAAY,IAAU;YAElB,IAAM,KAAK,GAAqB,IAAI,CAAC,YAAY,CAAC;YAElD,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACf,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC5B,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;gBACpC,CAAC;YACL,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC7B,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;gBACpC,CAAC;YACL,CAAC;YACD,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC1B,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;gBACrC,CAAC;YACL,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACpB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC5B,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,KAAK,CAAC;gBACrC,CAAC;YACL,CAAC;QACL,CAAC;QAED;;;;WAIG;QACH,yBAAQ,GAAR;YACI,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YAC/C,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC;QAClC,CAAC;QAED,uBAAM,GAAN,UAAO,GAA6B;YAEhC,IAAM,WAAW,GAAW,iBAAU,CAAC,WAAW,CAAC;YAEnD,IAAM,CAAC,GAAW,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChC,IAAM,CAAC,GAAW,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAEhC,IAAI,IAAY,EACZ,IAAY,CAAC;YACjB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAI,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;gBACtC,IAAI,GAAG,EAAE,CAAC;YACd,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,GAAG,IAAI,CAAC,SAAS,GAAG,WAAW,GAAG,IAAI,CAAC,aAAa,EAAE;oBACtD,IAAI,CAAC,QAAQ,EAAE,GAAG,WAAW,CAAC;gBAClC,IAAI,GAAG,EAAE,CAAC;YACd,CAAC;YAED,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACtC,CAAC;QAED,sBAAK,GAAL;YAEI,IAAM,SAAS,GAAW,CAAC,CAAC;YAE5B,gBAAK,CAAC,KAAK,WAAE,CAAC;YACd,IAAI,CAAC,SAAS,GAAG,gBAAS,CAAC,IAAI,CAAC;YAChC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,SAAS,EAAE,EAAE,GAAG,SAAS,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACpB,CAAC;QAED,4BAAW,GAAX,UAAY,CAAS,EAAE,CAAS;YAC5B,gBAAK,CAAC,WAAW,YAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,CAAC;QAED,2BAAU,GAAV;YACI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACzB,CAAC;QAED,mCAAkB,GAAlB,UAAmB,IAAU;YAEzB,IAAM,UAAU,GAAW,IAAI,CAAC,UAAU,CAAC;YAE3C,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrB,KAAK,gBAAS,CAAC,IAAI;oBACf,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;oBACxC,KAAK,CAAC;gBACV,KAAK,gBAAS,CAAC,IAAI;oBACf,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;oBACzC,KAAK,CAAC;gBACV,KAAK,gBAAS,CAAC,KAAK;oBAChB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;oBACtC,KAAK,CAAC;gBACV,KAAK,gBAAS,CAAC,KAAK;oBAChB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;oBACxC,KAAK,CAAC;YACd,CAAC;YAED,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAChE,CAAC;QACL,aAAC;IAAD,CA9GA,AA8GC,CA9G2B,kBAAW,GA8GtC;IA9GY,aAAM,SA8GlB,CAAA;AACL,CAAC,EAlHM,MAAM,KAAN,MAAM,QAkHZ","file":"Pacman.js","sourcesContent":["module pacman {\r\n    'use strict';\r\n\r\n    export class Pacman extends _BaseSprite {\r\n\r\n        _dyingFrame: number;\r\n\r\n        constructor() {\r\n            super(3);\r\n            this._dyingFrame = 0;\r\n        }\r\n\r\n        getUpdateDelayMillis(): number {\r\n            return 10;\r\n        }\r\n\r\n        handleInput(maze: Maze) {\r\n\r\n            const input: gtp.InputManager = game.inputManager;\r\n\r\n            if (input.left()) {\r\n                if (this.getCanMoveLeft(maze)) {\r\n                    this.direction = Direction.WEST;\r\n                }\r\n            }\r\n            else if (input.right()) {\r\n                if (this.getCanMoveRight(maze)) {\r\n                    this.direction = Direction.EAST;\r\n                }\r\n            }\r\n            if (input.up()) {\r\n                if (this.getCanMoveUp(maze)) {\r\n                    this.direction = Direction.NORTH;\r\n                }\r\n            }\r\n            else if (input.down()) {\r\n                if (this.getCanMoveDown(maze)) {\r\n                    this.direction = Direction.SOUTH;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Returns whether Pacman ins completely dead, or still doing his dying\r\n         * animation.\r\n         * @return {boolean} Whether Pacman is still in his dying animation.\r\n         */\r\n        incDying(): boolean {\r\n            this._dyingFrame = (this._dyingFrame + 1) % 12;\r\n            return this._dyingFrame !== 0;\r\n        }\r\n\r\n        render(ctx: CanvasRenderingContext2D) {\r\n\r\n            const SPRITE_SIZE: number = PacmanGame.SPRITE_SIZE;\r\n\r\n            const x: number = this.bounds.x;\r\n            const y: number = this.bounds.y;\r\n\r\n            let srcX: number,\r\n                srcY: number;\r\n            if (this._dyingFrame > 0) {\r\n                srcX = SPRITE_SIZE * this._dyingFrame;\r\n                srcY = 96;\r\n            }\r\n            else {\r\n                srcX = this.direction * SPRITE_SIZE * this.getFrameCount() +\r\n                    this.getFrame() * SPRITE_SIZE;\r\n                srcY = 80;\r\n            }\r\n\r\n            game.drawSprite(x, y, srcX, srcY);\r\n        }\r\n\r\n        reset() {\r\n\r\n            const TILE_SIZE: number = 8;\r\n\r\n            super.reset();\r\n            this.direction = Direction.WEST;\r\n            this.setLocation(13 * TILE_SIZE, 24 * TILE_SIZE - TILE_SIZE / 2);\r\n            this._frame = 0;\r\n        }\r\n\r\n        setLocation(x: number, y: number) {\r\n            super.setLocation(x, y);\r\n        }\r\n\r\n        startDying() {\r\n            this._dyingFrame = 1;\r\n        }\r\n\r\n        updatePositionImpl(maze: Maze) {\r\n\r\n            const moveAmount: number = this.moveAmount;\r\n\r\n            switch (this.direction) {\r\n                case Direction.WEST:\r\n                    this.goLeftIfPossible(maze, moveAmount);\r\n                    break;\r\n                case Direction.EAST:\r\n                    this.goRightIfPossible(maze, moveAmount);\r\n                    break;\r\n                case Direction.NORTH:\r\n                    this.goUpIfPossible(maze, moveAmount);\r\n                    break;\r\n                case Direction.SOUTH:\r\n                    this.goDownIfPossible(maze, moveAmount);\r\n                    break;\r\n            }\r\n\r\n            game.increaseScore(maze.checkForDot(this.row, this.column));\r\n        }\r\n    }\r\n}\r\n"]}