{"version":3,"sources":["pacman/PacmanGame.ts"],"names":["pacman","pacman.GhostUpdateStrategy","pacman.PacmanGame","pacman.PacmanGame.constructor","pacman.PacmanGame.addFruit","pacman.PacmanGame.checkForCollisions","pacman.PacmanGame.checkLoopedSound","pacman.PacmanGame._createGhostArray","pacman.PacmanGame.drawBigDot","pacman.PacmanGame.drawFruit","pacman.PacmanGame.drawGhosts","pacman.PacmanGame.drawScores","pacman.PacmanGame.drawScoresHeaders","pacman.PacmanGame.drawSmallDot","pacman.PacmanGame.drawSprite","pacman.PacmanGame.drawString","pacman.PacmanGame.getGhost","pacman.PacmanGame.godMode","pacman.PacmanGame.EXTRA_LIFE_SCORE","pacman.PacmanGame.level","pacman.PacmanGame.lives","pacman.PacmanGame.PENALTY_BOX_EXIT_X","pacman.PacmanGame.PENALTY_BOX_EXIT_Y","pacman.PacmanGame.SCORE_DISPLAY_LENGTH","pacman.PacmanGame.SPRITE_SIZE","pacman.PacmanGame.TILE_SIZE","pacman.PacmanGame.ghostEaten","pacman.PacmanGame.increaseLives","pacman.PacmanGame.increaseScore","pacman.PacmanGame.loadNextLevel","pacman.PacmanGame.makeGhostsBlue","pacman.PacmanGame.paintPointsEarned","pacman.PacmanGame.playChompSound","pacman.PacmanGame.resetGhosts","pacman.PacmanGame.setLoopedSound","pacman.PacmanGame.ghostUpdateStrategy","pacman.PacmanGame.toggleGodMode","pacman.PacmanGame.startGame","pacman.PacmanGame.startPacmanDying","pacman.PacmanGame.updateSpriteFrames","pacman.PacmanGame.updateSpritePositions"],"mappings":"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","file":"pacman/PacmanGame.js","sourcesContent":["module pacman {\r\n  'use strict';\r\n\r\n  /**\r\n\t * The default high score displayed in the game.\r\n\t */\r\n\tlet DEFAULT_HIGH_SCORE: number = 50000;\r\n\r\n  export enum GhostUpdateStrategy {\r\n    UPDATE_ALL, UPDATE_NONE, UPDATE_ONE\r\n  }\r\n\r\n  export class PacmanGame extends gtp.Game {\r\n\r\n    private _highScore: number;\r\n    private _lives: number;\r\n    private _score: number;\r\n    private _level: number;\r\n    private _ghostUpdateStrategy: GhostUpdateStrategy;\r\n    private _chompSound: number;\r\n    pacman: Pacman;\r\n    private _fruit: Fruit;\r\n    private _ghosts: Ghost[];\r\n    private _extraPointsArray: number[];\r\n\r\n    /**\r\n  \t * Whether the player has earned an extra life (from achieving a\r\n  \t * certain score).\r\n  \t */\r\n  \tprivate _earnedExtraLife: boolean;\r\n\r\n    /**\r\n  \t * The sound effect currently looping (the background siren, the ghosts\r\n  \t * running away, the ghost eyes running away, etc.).\r\n  \t */\r\n  \tprivate _loopedSoundId: number;\r\n\r\n    private _loopedSoundName: string;\r\n\r\n    /**\r\n  \t * A flag used internally to decide when a ghost changing state should\r\n  \t * also change the background noise (siren, eyes, etc.).\r\n  \t */\r\n  \tprivate _resettingGhostStates: boolean;\r\n\r\n    /**\r\n  \t * The index into the \"points\" image containing the image for an\r\n  \t * amount of points being earned, e.g. for eating a ghost.\r\n  \t */\r\n  \tprivate _eatenGhostPointsIndex: number;\r\n\r\n    /**\r\n  \t * The playtime (in nanoseconds) after which an eaten fruit's score\r\n  \t * should stop displaying.\r\n  \t */\r\n  \tprivate _fruitScoreEndTime: number;\r\n\r\n  \t/**\r\n  \t * The index into scores of the current fruit.\r\n  \t */\r\n  \tprivate _fruitScoreIndex: number;\r\n\r\n    private _godMode: boolean;\r\n\r\n    constructor(args?: any) {\r\n      super(args);\r\n      this._highScore = DEFAULT_HIGH_SCORE;\r\n      this.pacman = new Pacman();\r\n      this._ghosts = this._createGhostArray();\r\n      this._chompSound = 0;\r\n      this._ghostUpdateStrategy = GhostUpdateStrategy.UPDATE_ALL;\r\n      this._score = 0; // For title screen\r\n\r\n      this._extraPointsArray = [ 100, 200, 300, 400, 500, 700, 800,\r\n                                1000, 1600, 2000, 3000, 5000 ];\r\n    }\r\n\r\n    addFruit() {\r\n      if (!this._fruit) { // Should always be true.\r\n  \t\t\tthis._fruit = new Fruit(); // Made appropriate for current level.\r\n  \t\t\tthis._fruitScoreIndex = -1;\r\n  \t\t\tthis._fruitScoreEndTime = -1;\r\n  \t\t}\r\n    }\r\n\r\n    checkForCollisions(): Ghost {\r\n\r\n  \t\tfor (let i: number = 0; i < this._ghosts.length; i++) {\r\n  \t\t\tif (this.pacman.intersects(this._ghosts[i])) {\r\n  \t\t\t\treturn this._ghosts[i];\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\tif (this._fruit && this._fruitScoreIndex === -1 &&\r\n          this.pacman.intersects(this._fruit)) {\r\n  \t\t\tthis.increaseScore(this._extraPointsArray[this._fruit.pointsIndex]);\r\n  \t\t\tthis.audio.playSound(Sounds.EATING_FRUIT, false);\r\n  \t\t\tthis._fruitScoreIndex = this._fruit.pointsIndex;\r\n  \t\t\tthis._fruitScoreEndTime = game.playTime + PacmanGame.SCORE_DISPLAY_LENGTH;\r\n  \t\t}\r\n\r\n  \t\treturn null;\r\n  \t}\r\n\r\n    /**\r\n  \t * Ensures the background sound effect being played is appropriate for\r\n  \t * the ghosts' current states.\r\n  \t */\r\n  \tcheckLoopedSound() {\r\n\r\n  \t\tif (this._resettingGhostStates) {\r\n  \t\t\treturn;\r\n  \t\t}\r\n\r\n  \t\tlet blue: boolean = false;\r\n\r\n  \t\tfor (let i: number = 0; i < this._ghosts.length; i++) {\r\n  \t\t\tif (this._ghosts[i].isEyes()) {\r\n  \t\t\t\tthis.setLoopedSound(Sounds.EYES_RUNNING);\r\n  \t\t\t\treturn; // \"eye\" noise trumps blue noise.\r\n  \t\t\t}\r\n  \t\t\telse if (this._ghosts[i].isBlue()) {\r\n  \t\t\t\tblue = true;\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\tthis.setLoopedSound(blue ? Sounds.CHASING_GHOSTS : Sounds.SIREN);\r\n\r\n  \t}\r\n\r\n    /**\r\n  \t * Creates the array of ghosts the game will use.\r\n  \t *\r\n  \t * @return The array of ghosts.\r\n  \t */\r\n  \tprivate _createGhostArray(): Ghost[] {\r\n  \t\tlet ghosts: Ghost[] = [];\r\n  \t\tthis._resettingGhostStates = true;\r\n  \t\tghosts.push(new Blinky(this));\r\n      ghosts.push(new Pinky(this));\r\n      ghosts.push(new Inky(this));\r\n      ghosts.push(new Clyde(this));\r\n  \t\tthis._resettingGhostStates = false;\r\n  \t\treturn ghosts;\r\n  \t}\r\n\r\n    drawBigDot(x: number, y: number) {\r\n      const ms: number = this.playTime;\r\n      if (ms < 0 || (ms % 500) > 250) {\r\n         const ctx = this.canvas.getContext('2d');\r\n         const sx = 135,\r\n             sy = 38;\r\n         game.assets.get('sprites').drawScaled2(ctx, sx,sy,8,8, x,y,8,8);\r\n      }\r\n    }\r\n\r\n    drawFruit(ctx: CanvasRenderingContext2D) {\r\n      if (this._fruitScoreIndex > -1) {\r\n  \t\t\tthis.paintPointsEarned(ctx, this._fruitScoreIndex,\r\n            this._fruit.x, this._fruit.y);\r\n  \t\t\tlet time: number = game.playTime;\r\n  \t\t\tif (time >= this._fruitScoreEndTime) {\r\n  \t\t\t\tthis._fruit = null;\r\n  \t\t\t\tthis._fruitScoreIndex = -1;\r\n  \t\t\t\tthis._fruitScoreEndTime = -1;\r\n  \t\t\t}\r\n  \t\t}\r\n  \t\telse if (this._fruit) {\r\n  \t\t\tthis._fruit.paint(ctx);\r\n  \t\t}\r\n    }\r\n\r\n    /**\r\n  \t * Paints all four ghosts in their present location and state.\r\n  \t *\r\n  \t * @param ctx The context with which to paint.\r\n  \t */\r\n  \tdrawGhosts(ctx: CanvasRenderingContext2D) {\r\n      this._ghosts.forEach((ghost: Ghost) => {\r\n        ghost.paint(ctx);\r\n      });\r\n  \t}\r\n\r\n    drawScores(ctx: CanvasRenderingContext2D) {\r\n\r\n      let scoreStr: string = this._score.toString();\r\n      let x: number = 55 - scoreStr.length * 8;\r\n      let y: number = 10;\r\n      this.drawString(x,y, scoreStr, ctx);\r\n\r\n      scoreStr = this._highScore.toString();\r\n      x = 132 - scoreStr.length * 8;\r\n      this.drawString(x,y, scoreStr, ctx);\r\n    }\r\n\r\n    drawScoresHeaders(ctx: CanvasRenderingContext2D) {\r\n       this.drawString(16, 0, '1UP', ctx);\r\n       this.drawString(67, 0, 'HIGH SCORE', ctx);\r\n    }\r\n\r\n    drawSmallDot(x: number, y: number) {\r\n      let ctx = this.canvas.getContext('2d');\r\n      ctx.fillRect(x, y, 2, 2);\r\n    }\r\n\r\n    drawSprite(dx: number, dy: number, sx: number, sy: number) {\r\n      let image = game.assets.get('sprites');\r\n      let ctx = this.canvas.getContext('2d');\r\n      image.drawScaled2(ctx, sx,sy,16,16, dx,dy,16,16);\r\n    }\r\n\r\n    drawString(x: number, y: number, text: string|number,\r\n        ctx: CanvasRenderingContext2D = game.canvas.getContext('2d')) {\r\n\r\n      let str = text.toString(); // Allow us to pass in stuff like numerics\r\n\r\n      // Note we have a gtp.SpriteSheet, not a gtp.BitmapFont, so our\r\n      // calculation of what sub-image to draw is a little convoluted\r\n      let fontImage = this.assets.get('font');\r\n      let alphaOffs = 'A'.charCodeAt(0);\r\n      let numericOffs = '0'.charCodeAt(0);\r\n      let index: number;\r\n\r\n      for (let i = 0; i < str.length; i++) {\r\n\r\n         let ch = str[i];\r\n         let chCharCode = str.charCodeAt(i);\r\n         if (ch >= 'A' && ch <= 'Z') {\r\n            index = fontImage.colCount + (chCharCode - alphaOffs);\r\n         }\r\n         else if (ch >= '0' && ch <= '9') {\r\n            index = chCharCode - numericOffs;\r\n         }\r\n         else {\r\n            switch (ch) {\r\n               case '-':\r\n                  index = 10;\r\n                  break;\r\n               case '.':\r\n                  index = 11;\r\n                  break;\r\n               case '>':\r\n                  index = 12;\r\n                  break;\r\n               case '@':\r\n                  index = 13;\r\n                  break;\r\n               case '!':\r\n                  index = 14;\r\n                  break;\r\n               default:\r\n                  index = 15; // whitespace\r\n                  break;\r\n            }\r\n         }\r\n         fontImage.drawByIndex(ctx, x, y, index);\r\n         x += 9;//CHAR_WIDTH\r\n      }\r\n    }\r\n\r\n    getGhost(index: number): Ghost {\r\n      return this._ghosts[index];\r\n    }\r\n\r\n    get godMode(): boolean {\r\n      return this._godMode;\r\n    }\r\n\r\n    static get EXTRA_LIFE_SCORE(): number {\r\n      return 10000;\r\n    }\r\n\r\n    get level(): number {\r\n      return this._level;\r\n    }\r\n\r\n    get lives() : number {\r\n      return this._lives;\r\n    }\r\n\r\n    get PENALTY_BOX_EXIT_X(): number {\r\n      return (this.getWidth() - PacmanGame.SPRITE_SIZE) / 2;\r\n    }\r\n\r\n  \tget PENALTY_BOX_EXIT_Y(): number {\r\n      return 12 * PacmanGame.TILE_SIZE - PacmanGame.TILE_SIZE / 2;\r\n    }\r\n\r\n    /**\r\n  \t * Amount of time, in milliseconds, that points earned by Pacman should\r\n  \t * be displayed (e.g. from eating a ghost or a fruit).\r\n  \t */\r\n    static get SCORE_DISPLAY_LENGTH(): number {\r\n      return 750;\r\n    }\r\n\r\n    static get SPRITE_SIZE(): number {\r\n      return 16;\r\n    }\r\n\r\n    static get TILE_SIZE(): number {\r\n      return 8;\r\n    }\r\n\r\n    ghostEaten(ghost: Ghost): number {\r\n\r\n  \t\tswitch (this._eatenGhostPointsIndex) {\r\n  \t\t\tcase 0: // 1st ghost eaten\r\n  \t\t\t\tthis._eatenGhostPointsIndex = 1;\r\n  \t\t\t\tbreak;\r\n  \t\t\tcase 1: // 2nd ghost\r\n  \t\t\t\tthis._eatenGhostPointsIndex = 3;\r\n  \t\t\t\tbreak;\r\n  \t\t\tcase 3: // 3rd ghost\r\n  \t\t\t\tthis._eatenGhostPointsIndex = 6;\r\n  \t\t\t\tbreak;\r\n  \t\t\tdefault: // Should never happen.\r\n  \t\t\tcase 6: // 4th ghost\r\n  \t\t\t\tthis._eatenGhostPointsIndex = 8;\r\n  \t\t\t\tbreak;\r\n  \t\t}\r\n  \t\tthis.increaseScore(this._extraPointsArray[this._eatenGhostPointsIndex]);\r\n\r\n  \t\tthis.audio.playSound(Sounds.EATING_GHOST);\r\n  \t\treturn this._eatenGhostPointsIndex;\r\n  \t}\r\n\r\n    increaseLives(amount: number): number {\r\n      return this._lives += amount;\r\n    }\r\n\r\n    increaseScore(amount: number) {\r\n\r\n      this._score += amount;\r\n      if (this._score > this._highScore) {\r\n        this._highScore = this._score;\r\n      }\r\n\r\n      if (!this._earnedExtraLife && this._score >= PacmanGame.EXTRA_LIFE_SCORE) {\r\n        this.audio.playSound(Sounds.EXTRA_LIFE);\r\n        this.increaseLives(1);\r\n        this._earnedExtraLife = true;\r\n      }\r\n    }\r\n\r\n    loadNextLevel() {\r\n      this.setLoopedSound(null);\r\n  \t\tthis._level++;\r\n  \t\tthis._fruit = null;\r\n  \t\tthis._fruitScoreIndex = -1;\r\n  \t\tthis._fruitScoreEndTime = -1;\r\n      let state: MazeState = <MazeState>this.state;\r\n      state.reset();\r\n    }\r\n\r\n    makeGhostsBlue() {\r\n      this._eatenGhostPointsIndex = 0;\r\n      this._ghosts.forEach((ghost: Ghost) => {\r\n        ghost.possiblyTurnBlue();\r\n      });\r\n      // Don't just change to \"blue\" sound as \"eyes\" sound trumps \"blue\".\r\n  \t\tthis.checkLoopedSound();\r\n    }\r\n\r\n    /**\r\n     * Paints the \"points earned,\" for example, when PacMan eats a ghost or\r\n     * fruit.\r\n     *\r\n     * @param {CanvasContext2D} ctx The graphics context to use.\r\n     * @param {int} ptsIndex The index into the points array.\r\n     * @param {int} dx The x-coordinate at which to draw.\r\n     * @param {int} dy The y-coordinate at which to draw.\r\n     */\r\n    paintPointsEarned(ctx: CanvasRenderingContext2D, ptsIndex: number, dx: number, dy: number) {\r\n      let points: gtp.SpriteSheet = game.assets.get('points');\r\n      points.drawByIndex(ctx, dx, dy, ptsIndex);\r\n    }\r\n\r\n    /**\r\n     * Plays the next appropriate chomp sound.\r\n     */\r\n    playChompSound() {\r\n      this.audio.playSound(this._chompSound === 0 ?\r\n          Sounds.CHOMP_1 : Sounds.CHOMP_2);\r\n      this._chompSound = (this._chompSound + 1) % 2;\r\n    }\r\n\r\n    resetGhosts() {\r\n\r\n      this._resettingGhostStates = true;\r\n\r\n      // Have each ghost go to one of four random corners while in scatter\r\n      // mode, but ensure each ghost goes to a different corner.\r\n      let corners: gtp.Point[] = [\r\n        new gtp.Point(2, 1),\r\n        new gtp.Point(2, Maze.TILE_COUNT_HORIZONTAL - 2),\r\n        new gtp.Point(Maze.TILE_COUNT_VERTICAL - 2, 1),\r\n        new gtp.Point(Maze.TILE_COUNT_VERTICAL - 2, Maze.TILE_COUNT_HORIZONTAL - 2)\r\n      ];\r\n      let cornerSeed: number = gtp.Utils.randomInt(4);\r\n\r\n      for (let i: number = 0; i < this._ghosts.length; i++) {\r\n        this._ghosts[i].reset();\r\n        this._ghosts[i].setCorner(corners[(cornerSeed + i) % 4]);\r\n      }\r\n\r\n      this._resettingGhostStates = false;\r\n    }\r\n\r\n    /**\r\n     * Starts looping a sound effect.\r\n     * @param {string} sound The sound effect to loop.\r\n     */\r\n    setLoopedSound(sound: string) {\r\n      if (sound !== this._loopedSoundName) {\r\n        if (this._loopedSoundId != null) {\r\n          this.audio.stopSound(this._loopedSoundId);\r\n        }\r\n        this._loopedSoundName = sound;\r\n        if (sound != null) {\r\n          this._loopedSoundId = game.audio.playSound(sound, true);\r\n        }\r\n        else {\r\n          this._loopedSoundId = null;\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n  \t * Sets whether to update none, one, or all of the ghosts' positions\r\n  \t * each frame.  This is used for debugging purposes.\r\n  \t * @param state How many ghosts to update.\r\n  \t */\r\n  \tset ghostUpdateStrategy(strategy: GhostUpdateStrategy) {\r\n  \t\tthis._ghostUpdateStrategy = strategy;\r\n  \t}\r\n\r\n    toggleGodMode(): boolean {\r\n      this._godMode = !this._godMode;\r\n      this.setStatusMessage('God mode ' + (this._godMode ? 'enabled' : 'disabled'));\r\n      return this._godMode;\r\n    }\r\n\r\n    startGame(level: number) {\r\n\r\n        this._lives = 3;\r\n        this._score = 0;\r\n        this._level = 0;\r\n\r\n        let levelData = game.assets.get('levels')[level];\r\n        let mazeState = new pacman.MazeState(levelData);\r\n        //this.setState(new gtp.FadeOutInState(this.state, mazeState));\r\n        this.setState(mazeState); // The original did not fade in/out\r\n    }\r\n\r\n    startPacmanDying() {\r\n      this.setLoopedSound(null);\r\n      this.audio.playSound(pacman.Sounds.DIES);\r\n      this.pacman.startDying();\r\n      this._fruit = null;\r\n      this._fruitScoreIndex = -1;\r\n      this._fruitScoreEndTime = -1;\r\n    }\r\n\r\n    /**\r\n  \t * Goes to the next animation frame for pacman, the ghosts and the\r\n  \t * fruit.\r\n  \t */\r\n  \tupdateSpriteFrames() {\r\n  \t\tthis.pacman.updateFrame();\r\n      this._ghosts.forEach((ghost: Ghost) => {\r\n        ghost.updateFrame();\r\n      });\r\n  \t}\r\n\r\n  \t/**\r\n  \t * Updates the position of pacman, the ghosts and the fruit, in the\r\n  \t * specified maze.\r\n  \t * @param {Maze} maze The maze.\r\n     * @param {number} time\r\n  \t */\r\n  \tupdateSpritePositions(maze: Maze, time: number) {\r\n\r\n  \t\t// NOTE: We MUST update ghost positions before PacMan position.  This\r\n  \t\t// is because pacman.upatePosition() can cause the engine's \"playtime\"\r\n  \t\t// to reset to 0, which in turn will mess up the ghosts'\r\n  \t\t// updatePosition() calls (since we're using a \"cached\" time to pass\r\n  \t\t// to them).  This is seen when PacMan eats the last dot in a level\r\n  \t\t// and the next level is loaded.\r\n\r\n  \t\tswitch (this._ghostUpdateStrategy) {\r\n  \t\t\tcase GhostUpdateStrategy.UPDATE_ALL:\r\n          this._ghosts.forEach((ghost: Ghost) => {\r\n            ghost.updatePosition(maze, time);\r\n          });\r\n  \t\t\t\tbreak;\r\n  \t\t\tcase GhostUpdateStrategy.UPDATE_NONE:\r\n  \t\t\t\tbreak;\r\n  \t\t\tcase GhostUpdateStrategy.UPDATE_ONE:\r\n  \t\t\t\tthis._ghosts[0].updatePosition(maze, time);\r\n  \t\t\t\tbreak;\r\n  \t\t}\r\n\r\n  \t\tthis.pacman.updatePosition(maze, time);\r\n\r\n  \t}\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}