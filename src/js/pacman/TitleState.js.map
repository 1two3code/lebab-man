{"version":3,"sources":["../app/pacman/TitleState.ts"],"names":[],"mappings":"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","file":"TitleState.js","sourcesContent":["module pacman {\r\n    'use strict';\r\n\r\n    export class TitleState extends _BaseState {\r\n\r\n        private _choice: number;\r\n        private _lastKeypressTime: number;\r\n\r\n        /**\r\n         * State that renders the title screen.\r\n         * @constructor\r\n         */\r\n        constructor(args?: PacmanGame | gtp.BaseStateArgs) {\r\n            super(args);\r\n            // Initialize our sprites not just in enter() so they are positioned\r\n            // correctly while FadeOutInState is running\r\n            this._initSprites();\r\n        }\r\n\r\n        enter() {\r\n\r\n            super.enter(game);\r\n\r\n            game.canvas.addEventListener('touchstart', this.handleStart, false);\r\n            this._choice = 0;\r\n            this._lastKeypressTime = game.playTime;\r\n\r\n            this._initSprites();\r\n        }\r\n\r\n        private _initSprites() {\r\n            const pacman: Pacman = game.pacman;\r\n            pacman.setLocation(game.getWidth() / 2, 240);\r\n            pacman.direction = Direction.EAST;\r\n            const ghost: Ghost = game.getGhost(0);\r\n            ghost.setLocation(game.getWidth() / 2 - 3 * PacmanGame.SPRITE_SIZE, 240);\r\n            ghost.direction = Direction.EAST;\r\n        }\r\n\r\n        leaving(game: gtp.Game) {\r\n            game.canvas.removeEventListener('touchstart', this.handleStart, false);\r\n        }\r\n\r\n        private getGame(): PacmanGame {\r\n            return <PacmanGame>this.game;\r\n        }\r\n\r\n        handleStart() {\r\n            console.log('Yee, touch detected!');\r\n            this._startGame();\r\n        }\r\n\r\n        render(ctx: CanvasRenderingContext2D) {\r\n\r\n            let SCREEN_WIDTH: number = game.getWidth(),\r\n                SCREEN_HEIGHT: number = game.getHeight(),\r\n                charWidth: number = 9;\r\n\r\n            this._renderStaticStuff(ctx);\r\n\r\n            // Draw the menu \"choice\" arrow\r\n            // \" - 5\" to account for differently sized choices\r\n            let x: number = (SCREEN_WIDTH - charWidth * 15) / 2 - 5;\r\n            let y: number = (SCREEN_HEIGHT - 15 * 2) / 2;\r\n            this.getGame().drawString(x, y + this._choice * 15, '>');\r\n\r\n            // Draw the small and big dots\r\n            x += charWidth * 1.5;\r\n            y = 200;\r\n            game.canvas.getContext('2d').fillStyle = '#ffffff';\r\n            game.drawSmallDot(x + 3, y + 2);\r\n            y += 9;\r\n            game.drawBigDot(x, y);\r\n\r\n            // Draw the sprites\r\n            game.pacman.render(ctx);\r\n            game.getGhost(0).paint(ctx);\r\n\r\n            if (!game.audio.isInitialized()) {\r\n                this._renderNoSoundMessage();\r\n            }\r\n        }\r\n\r\n        _stringWidth(str: string): number {\r\n            return game.assets.get('font').cellW * str.length;\r\n        }\r\n\r\n        _renderNoSoundMessage() {\r\n\r\n            let w: number = game.getWidth();\r\n\r\n            let text: string = 'SOUND IS DISABLED AS';\r\n            let x: number = (w - this._stringWidth(text)) / 2;\r\n            let y: number = game.getHeight() - 20 - 9 * 3;\r\n            this.getGame().drawString(x, y, text);\r\n            text = 'YOUR BROWSER DOES NOT';\r\n            x = ( w - this._stringWidth(text)) / 2;\r\n            y += 9;\r\n            this.getGame().drawString(x, y, text);\r\n            text = 'SUPPORT WEB AUDIO';\r\n            x = (w - this._stringWidth(text)) / 2;\r\n            y += 9;\r\n            this.getGame().drawString(x, y, text);\r\n        }\r\n\r\n        // TODO: Move this stuff into an image that gets rendered each frame?\r\n        _renderStaticStuff(ctx: CanvasRenderingContext2D) {\r\n\r\n            const game: gtp.Game = this.game;\r\n            game.clearScreen('rgb(0,0,0)');\r\n            const SCREEN_WIDTH: number = game.getWidth();\r\n            const charWidth: number = 9;\r\n\r\n            // Render the \"scores\" stuff at the top.\r\n            (<PacmanGame>game).drawScores(ctx);\r\n            (<PacmanGame>game).drawScoresHeaders(ctx);\r\n\r\n            // Title image\r\n            let titleImage: gtp.Image = game.assets.get('title');\r\n            let x: number = (SCREEN_WIDTH - titleImage.width) / 2;\r\n            let y: number = titleImage.height * 1.2;\r\n            titleImage.draw(ctx, x, y);\r\n\r\n            // Game menu\r\n            let temp: string = 'STANDARD MAZE';\r\n            let charCount: number = temp.length - 1; // \"-1\" for selection arrow\r\n            // \" - 5\" to account for differently sized choices\r\n            x = (SCREEN_WIDTH - charWidth * charCount) / 2 - 5;\r\n            y = (game.getHeight() - 15 * 2) / 2;\r\n            this.getGame().drawString(x, y, temp, ctx);\r\n            temp = 'ALTERNATE MAZE';\r\n            y += 15;\r\n            this.getGame().drawString(x, y, temp, ctx);\r\n\r\n            // Scores for the dot types\r\n            x += charWidth * 2;\r\n            temp = '10 POINTS';\r\n            charCount = temp.length - 2; // \"-2\" for animated dots\r\n            y = 200;\r\n            this.getGame().drawString(x, y, temp, ctx);\r\n            temp = '50 POINTS';\r\n            y += 9;\r\n            this.getGame().drawString(x, y, temp, ctx);\r\n\r\n            // Copyright\r\n            temp = '2015 OLD MAN GAMES';\r\n            x = (SCREEN_WIDTH - charWidth * temp.length) / 2;\r\n            y = game.getHeight() - 20;\r\n            this.getGame().drawString(x, y, temp, ctx);\r\n        }\r\n\r\n        _startGame() {\r\n            game.startGame(this._choice);\r\n        }\r\n\r\n        update(delta: number) {\r\n\r\n            this.handleDefaultKeys();\r\n\r\n            let playTime: number = game.playTime;\r\n            if (playTime > this._lastKeypressTime + _BaseState.INPUT_REPEAT_MILLIS + 100) {\r\n\r\n                let im: gtp.InputManager = game.inputManager;\r\n\r\n                if (im.up()) {\r\n                    this._choice = Math.abs(this._choice - 1);\r\n                    game.audio.playSound(Sounds.TOKEN);\r\n                    this._lastKeypressTime = playTime;\r\n                }\r\n                else if (im.down()) {\r\n                    this._choice = (this._choice + 1) % 2;\r\n                    game.audio.playSound(Sounds.TOKEN);\r\n                    this._lastKeypressTime = playTime;\r\n                }\r\n                else if (im.enter(true)) {\r\n                    this._startGame();\r\n                }\r\n            }\r\n\r\n            let pacman: Pacman = game.pacman;\r\n            let ghost: Ghost = game.getGhost(0);\r\n\r\n            // Update the animated Pacman\r\n            let moveAmount: number = pacman.moveAmount;\r\n            if (pacman.direction === Direction.WEST) {\r\n                moveAmount = -moveAmount;\r\n            }\r\n            pacman.incX(moveAmount);\r\n            moveAmount = ghost.moveAmount;\r\n            if (ghost.direction === Direction.WEST) {\r\n                moveAmount = -moveAmount;\r\n            }\r\n            ghost.incX(moveAmount);\r\n\r\n            // Check whether it's time to turn around\r\n            if (pacman.x + pacman.width >= this.game.getWidth() - 30) {\r\n                pacman.direction = ghost.direction = Direction.WEST;\r\n            }\r\n            else if (ghost.x <= 30) {\r\n                pacman.direction = ghost.direction = Direction.EAST;\r\n            }\r\n\r\n            this._updateSpriteFrames();\r\n        }\r\n    }\r\n}\r\n"]}