{"version":3,"sources":["pacman/Pinky.ts"],"names":["pacman","pacman.Pinky","pacman.Pinky.constructor","pacman.Pinky.reset","pacman.Pinky.updatePositionChasingPacman"],"mappings":"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","file":"pacman/Pinky.js","sourcesContent":["module pacman {\r\n  'use strict';\r\n\r\n    /**\r\n    * Pinky, the pink ghost.  If PacMan is \"visible\" to Pinky (i.e., in the\r\n    * same row or column), he'll chase him\r\n     */\r\n     export class Pinky extends Ghost {\r\n\r\n    \t/**\r\n    \t * Constructor.\r\n    \t */\r\n    \tconstructor(game: PacmanGame) {\r\n    \t\tsuper(game, 2 * PacmanGame.SPRITE_SIZE, 2);\r\n    \t}\r\n\r\n    \treset() {\r\n    \t\tsuper.reset();\r\n    \t\tthis.direction = Direction.NORTH;\r\n        this.setLocation(14 * PacmanGame.TILE_SIZE - PacmanGame.TILE_SIZE / 2 - 4,\r\n          15 * PacmanGame.TILE_SIZE - PacmanGame.TILE_SIZE / 2);\r\n    \t\tthis.motionState = MotionState.IN_BOX;\r\n    \t}\r\n\r\n  \t/**\r\n  \t * Updates an actor's position.\r\n  \t *\r\n  \t * @param maze The maze in which the actor is moving.\r\n  \t */\r\n  \tupdatePositionChasingPacman(maze: Maze) {\r\n\r\n      const moveAmount: number = this.moveAmount;\r\n\r\n      const pacman: Pacman = game.pacman;\r\n      const pacRow: number = pacman.row;\r\n      const pacCol: number = pacman.column;\r\n      const row = this.row;\r\n      const col = this.column;\r\n      let moved: boolean = false;\r\n\r\n  \t\tif (this.atIntersection(maze)) {\r\n\r\n  \t\t\tif (row === pacRow && maze.isClearShotRow(row, col, pacCol)) {\r\n  \t\t\t\tif (pacCol < col) {\r\n            this.direction = Direction.WEST;\r\n  \t\t\t\t\tthis.incX(-moveAmount);\r\n  \t\t\t\t}\r\n  \t\t\t\telse {\r\n  \t\t\t\t\t// We need to check whether Pinky can go right here or not.\r\n  \t\t\t\t\t// In the case where pacCol==col, if God Mode is enabled,\r\n  \t\t\t\t\t// PacMan won't die just because Pinky is on him.  And so,\r\n  \t\t\t\t\t// in this case, if PacMan is in a \"corner,\" Pinky  may not\r\n  \t\t\t\t\t// be able to keep traveling to the right.  In normal play\r\n  \t\t\t\t\t// though, this check wouldn't be necessary.\r\n  \t\t\t\t\tif (!this.goRightIfPossible(maze, moveAmount)) {\r\n  \t\t\t\t\t\tthis.changeDirectionFallback(maze);\r\n  \t\t\t\t\t}\r\n  \t\t\t\t}\r\n  \t\t\t\tmoved = true;\r\n  \t\t\t}\r\n\r\n  \t\t\telse if (col === pacCol && maze.isClearShotColumn(col, row, pacRow)) {\r\n  \t\t\t\tif (pacRow < row) {\r\n            this.direction = Direction.NORTH;\r\n  \t\t\t\t\tthis.incY(-moveAmount);\r\n  \t\t\t\t}\r\n  \t\t\t\telse {\r\n  \t\t\t\t\t// We need to check whether Pinky can go down here or not.\r\n  \t\t\t\t\t// In the case where pacRow==row, if God Mode is enabled,\r\n  \t\t\t\t\t// PacMan won't die just because Pinky is on him.  And so,\r\n  \t\t\t\t\t// in this case, if PacMan is in a \"corner,\" Pinky  may not\r\n  \t\t\t\t\t// be able to keep traveling down.  In normal play though,\r\n  \t\t\t\t\t// this check wouldn't be necessary.\r\n  \t\t\t\t\tif (!this.goDownIfPossible(maze, moveAmount)) {\r\n  \t\t\t\t\t\tthis.changeDirectionFallback(maze);\r\n  \t\t\t\t\t}\r\n  \t\t\t\t}\r\n  \t\t\t\tmoved = true;\r\n  \t\t\t}\r\n\r\n  \t\t\tif (!moved) {\r\n  \t\t\t\tthis.changeDirectionFallback(maze);\r\n  \t\t\t}\r\n\r\n  \t\t}\r\n\r\n  \t\t// Not at an intersection, so we should be able to keep going\r\n  \t\t// in our current direction.\r\n  \t\telse {\r\n  \t\t\tthis.continueInCurrentDirection(moveAmount);\r\n  \t\t}\r\n\r\n  \t\t// Switch over to scatter mode if it's time to do so.\r\n  \t\tif (game.playTime >= this.startScatteringTime) {\r\n        this.motionState = MotionState.SCATTERING;\r\n  \t\t}\r\n\r\n  \t}\r\n\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}