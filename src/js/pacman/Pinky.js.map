{"version":3,"sources":["../app/pacman/Pinky.ts"],"names":[],"mappings":"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","file":"Pinky.js","sourcesContent":["module pacman {\r\n    'use strict';\r\n\r\n    /**\r\n     * Pinky, the pink ghost.  If PacMan is \"visible\" to Pinky (i.e., in the\r\n     * same row or column), he'll chase him\r\n     */\r\n    export class Pinky extends Ghost {\r\n\r\n        /**\r\n         * Constructor.\r\n         */\r\n        constructor(game: PacmanGame) {\r\n            super(game, 2 * PacmanGame.SPRITE_SIZE, 2);\r\n        }\r\n\r\n        reset() {\r\n            super.reset();\r\n            this.direction = Direction.NORTH;\r\n            this.setLocation(14 * PacmanGame.TILE_SIZE - PacmanGame.TILE_SIZE / 2 - 4,\r\n                15 * PacmanGame.TILE_SIZE - PacmanGame.TILE_SIZE / 2);\r\n            this.motionState = MotionState.IN_BOX;\r\n        }\r\n\r\n        /**\r\n         * Updates an actor's position.\r\n         *\r\n         * @param maze The maze in which the actor is moving.\r\n         */\r\n        updatePositionChasingPacman(maze: Maze) {\r\n\r\n            const moveAmount: number = this.moveAmount;\r\n\r\n            const pacman: Pacman = game.pacman;\r\n            const pacRow: number = pacman.row;\r\n            const pacCol: number = pacman.column;\r\n            const row: number = this.row;\r\n            const col: number = this.column;\r\n            let moved: boolean = false;\r\n\r\n            if (this.atIntersection(maze)) {\r\n\r\n                if (row === pacRow && maze.isClearShotRow(row, col, pacCol)) {\r\n                    if (pacCol < col) {\r\n                        this.direction = Direction.WEST;\r\n                        this.incX(-moveAmount);\r\n                    }\r\n                    else {\r\n                        // We need to check whether Pinky can go right here or not.\r\n                        // In the case where pacCol==col, if God Mode is enabled,\r\n                        // PacMan won't die just because Pinky is on him.  And so,\r\n                        // in this case, if PacMan is in a \"corner,\" Pinky  may not\r\n                        // be able to keep traveling to the right.  In normal play\r\n                        // though, this check wouldn't be necessary.\r\n                        if (!this.goRightIfPossible(maze, moveAmount)) {\r\n                            this.changeDirectionFallback(maze);\r\n                        }\r\n                    }\r\n                    moved = true;\r\n                }\r\n\r\n                else if (col === pacCol && maze.isClearShotColumn(col, row, pacRow)) {\r\n                    if (pacRow < row) {\r\n                        this.direction = Direction.NORTH;\r\n                        this.incY(-moveAmount);\r\n                    }\r\n                    else {\r\n                        // We need to check whether Pinky can go down here or not.\r\n                        // In the case where pacRow==row, if God Mode is enabled,\r\n                        // PacMan won't die just because Pinky is on him.  And so,\r\n                        // in this case, if PacMan is in a \"corner,\" Pinky  may not\r\n                        // be able to keep traveling down.  In normal play though,\r\n                        // this check wouldn't be necessary.\r\n                        if (!this.goDownIfPossible(maze, moveAmount)) {\r\n                            this.changeDirectionFallback(maze);\r\n                        }\r\n                    }\r\n                    moved = true;\r\n                }\r\n\r\n                if (!moved) {\r\n                    this.changeDirectionFallback(maze);\r\n                }\r\n\r\n            }\r\n\r\n            // Not at an intersection, so we should be able to keep going\r\n            // in our current direction.\r\n            else {\r\n                this.continueInCurrentDirection(moveAmount);\r\n            }\r\n\r\n            // Switch over to scatter mode if it's time to do so.\r\n            if (game.playTime >= this.startScatteringTime) {\r\n                this.motionState = MotionState.SCATTERING;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n"]}