{"version":3,"sources":["pacman/Pinky.ts"],"names":["pacman","pacman.Pinky","pacman.Pinky.constructor","pacman.Pinky.reset","pacman.Pinky.updatePositionChasingPacman"],"mappings":"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","file":"pacman/Pinky.js","sourcesContent":["module pacman {\r\n    'use strict';\r\n\r\n    /**\r\n     * Pinky, the pink ghost.  If PacMan is \"visible\" to Pinky (i.e., in the\r\n     * same row or column), he'll chase him\r\n     */\r\n    export class Pinky extends Ghost {\r\n\r\n        /**\r\n         * Constructor.\r\n         */\r\n        constructor(game: PacmanGame) {\r\n            super(game, 2 * PacmanGame.SPRITE_SIZE, 2);\r\n        }\r\n\r\n        reset() {\r\n            super.reset();\r\n            this.direction = Direction.NORTH;\r\n            this.setLocation(14 * PacmanGame.TILE_SIZE - PacmanGame.TILE_SIZE / 2 - 4,\r\n                15 * PacmanGame.TILE_SIZE - PacmanGame.TILE_SIZE / 2);\r\n            this.motionState = MotionState.IN_BOX;\r\n        }\r\n\r\n        /**\r\n         * Updates an actor's position.\r\n         *\r\n         * @param maze The maze in which the actor is moving.\r\n         */\r\n        updatePositionChasingPacman(maze: Maze) {\r\n\r\n            const moveAmount: number = this.moveAmount;\r\n\r\n            const pacman: Pacman = game.pacman;\r\n            const pacRow: number = pacman.row;\r\n            const pacCol: number = pacman.column;\r\n            const row: number = this.row;\r\n            const col: number = this.column;\r\n            let moved: boolean = false;\r\n\r\n            if (this.atIntersection(maze)) {\r\n\r\n                if (row === pacRow && maze.isClearShotRow(row, col, pacCol)) {\r\n                    if (pacCol < col) {\r\n                        this.direction = Direction.WEST;\r\n                        this.incX(-moveAmount);\r\n                    }\r\n                    else {\r\n                        // We need to check whether Pinky can go right here or not.\r\n                        // In the case where pacCol==col, if God Mode is enabled,\r\n                        // PacMan won't die just because Pinky is on him.  And so,\r\n                        // in this case, if PacMan is in a \"corner,\" Pinky  may not\r\n                        // be able to keep traveling to the right.  In normal play\r\n                        // though, this check wouldn't be necessary.\r\n                        if (!this.goRightIfPossible(maze, moveAmount)) {\r\n                            this.changeDirectionFallback(maze);\r\n                        }\r\n                    }\r\n                    moved = true;\r\n                }\r\n\r\n                else if (col === pacCol && maze.isClearShotColumn(col, row, pacRow)) {\r\n                    if (pacRow < row) {\r\n                        this.direction = Direction.NORTH;\r\n                        this.incY(-moveAmount);\r\n                    }\r\n                    else {\r\n                        // We need to check whether Pinky can go down here or not.\r\n                        // In the case where pacRow==row, if God Mode is enabled,\r\n                        // PacMan won't die just because Pinky is on him.  And so,\r\n                        // in this case, if PacMan is in a \"corner,\" Pinky  may not\r\n                        // be able to keep traveling down.  In normal play though,\r\n                        // this check wouldn't be necessary.\r\n                        if (!this.goDownIfPossible(maze, moveAmount)) {\r\n                            this.changeDirectionFallback(maze);\r\n                        }\r\n                    }\r\n                    moved = true;\r\n                }\r\n\r\n                if (!moved) {\r\n                    this.changeDirectionFallback(maze);\r\n                }\r\n\r\n            }\r\n\r\n            // Not at an intersection, so we should be able to keep going\r\n            // in our current direction.\r\n            else {\r\n                this.continueInCurrentDirection(moveAmount);\r\n            }\r\n\r\n            // Switch over to scatter mode if it's time to do so.\r\n            if (game.playTime >= this.startScatteringTime) {\r\n                this.motionState = MotionState.SCATTERING;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}