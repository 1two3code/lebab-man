{"version":3,"sources":["pacman/MazeState.ts"],"names":["pacman","pacman.Substate","pacman.MazeState","pacman.MazeState.constructor","pacman.MazeState.DYING_FRAME_DELAY_MILLIS","pacman.MazeState._readyDelayMillis","pacman.MazeState.init","pacman.MazeState._paintExtraLives","pacman.MazeState._paintPossibleFruits","pacman.MazeState.render","pacman.MazeState._handleInput","pacman.MazeState.update","pacman.MazeState._updateInGameImpl"],"mappings":"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CA,CAACA,EAAEA,EAAEA,GAACA,EAAEA,EAACA,CAACA,GAACA,EAAEA,CAACA,CAACA;gBACrCA,eAAeA;gBAClBA,KAAKA,CAACA;oBACHA,IAAIA,CAACA,UAAUA,CAACA,CAACA,GAACA,EAAEA,EAACA,CAACA,EAAEA,EAAEA,GAACA,EAAEA,EAACA,CAACA,GAACA,EAAEA,CAACA,CAACA;gBACpCA,eAAeA;gBAClBA,KAAKA,CAACA;oBACHA,IAAIA,CAACA,UAAUA,CAACA,CAACA,GAACA,GAAGA,EAACA,CAACA,EAAEA,EAAEA,GAACA,EAAEA,EAACA,CAACA,GAACA,EAAEA,CAACA,CAACA;gBACrCA,gBAAgBA;gBACnBA,KAAKA,CAACA;oBACHA,IAAIA,CAACA,UAAUA,CAACA,CAACA,GAACA,GAAGA,EAACA,CAACA,EAAEA,EAAEA,GAACA,EAAEA,EAACA,CAACA,GAACA,EAAEA,CAACA,CAACA;gBACrCA,gBAAgBA;gBACnBA,KAAKA,CAACA;oBACHA,IAAIA,CAACA,UAAUA,CAACA,CAACA,GAACA,EAAEA,EAACA,CAACA,EAAEA,EAAEA,GAACA,EAAEA,EAACA,CAACA,GAACA,EAAEA,CAACA,CAACA;gBACpCA,gBAAgBA;gBACnBA,KAAKA,CAACA;oBACHA,IAAIA,CAACA,UAAUA,CAACA,CAACA,GAACA,EAAEA,EAACA,CAACA,EAAEA,EAAEA,GAACA,EAAEA,EAACA,CAACA,GAACA,EAAEA,CAACA,CAACA;gBACpCA,gBAAgBA;gBACnBA,KAAKA,CAACA;oBACHA,IAAIA,CAACA,UAAUA,CAACA,CAACA,GAACA,EAAEA,EAACA,CAACA,EAAEA,EAAEA,GAACA,EAAEA,EAACA,CAACA,GAACA,EAAEA,CAACA,CAACA;gBACpCA,gBAAgBA;gBACnBA,KAAKA,CAACA;oBACHA,IAAIA,CAACA,UAAUA,CAACA,CAACA,EAACA,CAACA,EAAEA,EAAEA,GAACA,EAAEA,EAACA,CAACA,GAACA,EAAEA,CAACA,CAACA;oBACjCA,KAAKA,CAACA;YACZA,CAACA;QACHA,CAACA;QAEDN,0BAAMA,GAANA,UAAOA,GAA6BA;YAElCO,gBAAKA,CAACA,MAAMA,YAACA,GAAGA,CAACA,CAACA;YAClBA,IAAIA,CAACA,KAAKA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA;YAEvBA,0DAA0DA;YAC1DA,IAAIA,SAASA,GAAGA,CAACA,CAACA;YAClBA,IAAIA,KAAKA,GAAGA,IAAIA,CAACA,SAASA,EAAEA,GAAGA,CAACA,GAACA,SAASA;gBACpCA,aAAIA,CAACA,mBAAmBA,GAAGA,SAASA,CAACA;YAC3CA,GAAGA,CAACA,SAASA,CAACA,CAACA,EAAEA,KAAKA,CAACA,CAACA;YAExBA,uBAAuBA;YAEvBA,IAAIA,MAAMA,GAAGA,IAAIA,CAACA,MAAMA,CAACA;YACzBA,EAAEA,CAACA,CAACA,IAAIA,CAACA,iBAAiBA,KAAKA,CAACA,CAACA,CAACA,CAACA,CAACA;gBACjCA,EAAEA,CAACA,CAACA,IAAIA,CAACA,SAASA,KAAKA,QAAQA,CAACA,SAASA,CAACA,CAACA,CAACA;oBACzCA,MAAMA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA;gBACtBA,CAACA;YACJA,CAACA;YACDA,IAAIA,CAACA,CAACA;gBACHA,IAAIA,CAACA,GAAGA,MAAMA,CAACA,MAAMA,CAACA,CAACA,CAACA;gBACxBA,IAAIA,CAACA,GAAGA,MAAMA,CAACA,MAAMA,CAACA,CAACA,CAACA;gBACxBA,IAAIA,CAACA,iBAAiBA,CAACA,GAAGA,EAAEA,IAAIA,CAACA,iBAAiBA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA;YAC7DA,CAACA;YAEDA,IAAIA,CAACA,UAAUA,CAACA,GAAGA,CAACA,CAACA;YAErBA,GAAGA,CAACA,SAASA,CAACA,CAACA,EAAEA,CAACA,KAAKA,CAACA,CAACA;YAEzBA,IAAIA,CAACA,UAAUA,CAACA,GAAGA,CAACA,CAACA;YACrBA,IAAIA,CAACA,gBAAgBA,CAACA,GAAGA,CAACA,CAACA;YAC3BA,IAAIA,CAACA,oBAAoBA,CAACA,GAAGA,CAACA,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","file":"pacman/MazeState.js","sourcesContent":["module pacman {\r\n  'use strict';\r\n\r\n  enum Substate {\r\n    READY,\r\n    IN_GAME,\r\n    DYING,\r\n    GAME_OVER\r\n  }\r\n\r\n  export class MazeState extends _BaseState {\r\n\r\n    private _mazeFile: string;\r\n    private _maze: Maze;\r\n    private _firstTimeThrough: boolean;\r\n    private _updateScoreIndex: number;\r\n    private _substate: Substate;\r\n    private _substateStartTime: number;\r\n    private _nextUpdateTime: number;\r\n    private _nextDyingFrameTime: number;\r\n    private _lastMazeScreenKeypressTime: number;\r\n    private _lastSpriteFrameTime: number;\r\n\r\n    constructor(mazeFile: string) {\r\n      super();\r\n      this._mazeFile = mazeFile;\r\n    }\r\n\r\n    private get DYING_FRAME_DELAY_MILLIS(): number {\r\n      return 7500;\r\n    }\r\n\r\n    private get _readyDelayMillis(): number {\r\n      return this._firstTimeThrough ? 4500 : 2000;\r\n    }\r\n\r\n    init() {\r\n\r\n      game.pacman.reset();\r\n      game.resetGhosts();\r\n\r\n      this._maze = new Maze(this._mazeFile);\r\n      this._firstTimeThrough = true;\r\n      this._updateScoreIndex = -1;\r\n\r\n      // Prevents the user's \"Enter\" press to start the game from being\r\n  \t\t// picked up by our handleInput().\r\n  \t\tthis._lastMazeScreenKeypressTime = gtp.Utils.timestamp() + this.inputRepeatMillis;\r\n\r\n  \t\tthis._substate = Substate.READY;\r\n  \t\tthis._firstTimeThrough = true;\r\n  \t\tthis._substateStartTime = 0;\r\n      this._nextDyingFrameTime = 0;\r\n      this._nextUpdateTime = 0;\r\n      this._lastSpriteFrameTime = 0;\r\n    }\r\n\r\n    _paintExtraLives(ctx: CanvasRenderingContext2D) {\r\n\r\n      // The indentation on either side of the status stuff at the bottom\r\n      // (extra life count, possible fruits, etc.).\r\n      var BOTTOM_INDENT = 24;\r\n      var TILE_SIZE = 8;\r\n\r\n      var lives = game.lives;\r\n      if (lives > 0) {\r\n         var x = BOTTOM_INDENT;\r\n         var y = game.getHeight() - 2 * TILE_SIZE;\r\n         var w = 2 * TILE_SIZE;\r\n         for (var i = 0; i < lives; i++) {\r\n            game.drawSprite(x, y, 12*16, 3*16);\r\n            x += w;\r\n         }\r\n      }\r\n  }\r\n\r\n    _paintPossibleFruits(ctx: CanvasRenderingContext2D) {\r\n\r\n      // The indentation on either side of the status stuff at the bottom\r\n      // (extra life count, possible fruits, etc.).\r\n      var BOTTOM_INDENT = 24;\r\n      var TILE_SIZE = 8;\r\n\r\n      var x = game.getWidth() - BOTTOM_INDENT - 2 * TILE_SIZE;\r\n      var y = game.getHeight() - 2 * TILE_SIZE;\r\n\r\n      switch (game.level) {\r\n         default:\r\n         case 7: // Key\r\n            game.drawSprite(x-112,y, 13*16,3*16);\r\n            // Fall through\r\n         case 6: // Space Invaders ship\r\n            game.drawSprite(x-96,y, 13*16,6*16);\r\n            // Fall through\r\n         case 5: // Green thing (grapes?)\r\n            game.drawSprite(x-160,y, 12*16,6*16);\r\n            // Fall through.\r\n         case 4: // Apple\r\n            game.drawSprite(x-128,y, 13*16,2*16);\r\n            // Fall through.\r\n         case 3: // Yellow bell\r\n            game.drawSprite(x-96,y, 13*16,5*16);\r\n            // Fall through.\r\n         case 2: // Peach\r\n            game.drawSprite(x-64,y, 12*16,5*16);\r\n            // Fall through.\r\n         case 1: // Strawberry\r\n            game.drawSprite(x-32,y, 13*16,4*16);\r\n            // Fall through.\r\n         case 0: // Cherry\r\n            game.drawSprite(x,y, 12*16,4*16);\r\n            break;\r\n      }\r\n    }\r\n\r\n    render(ctx: CanvasRenderingContext2D) {\r\n\r\n      super.render(ctx);\r\n      this._maze.render(ctx);\r\n\r\n      // \"window.pacman\" because of hoisting of pacman var below\r\n      var TILE_SIZE = 8;\r\n      var mazeY = game.getHeight() - 2*TILE_SIZE -\r\n            Maze.TILE_COUNT_VERTICAL * TILE_SIZE;\r\n      ctx.translate(0, mazeY);\r\n\r\n      //game.paintFruit(ctx);\r\n\r\n      var pacman = game.pacman;\r\n      if (this._updateScoreIndex === -1) {\r\n         if (this._substate !== Substate.GAME_OVER) {\r\n            pacman.render(ctx);\r\n         }\r\n      }\r\n      else {\r\n         var x = pacman.bounds.x;\r\n         var y = pacman.bounds.y;\r\n         game.paintPointsEarned(ctx, this._updateScoreIndex, x, y);\r\n      }\r\n\r\n      game.drawGhosts(ctx);\r\n\r\n      ctx.translate(0, -mazeY);\r\n\r\n      game.drawScores(ctx);\r\n      this._paintExtraLives(ctx);\r\n      this._paintPossibleFruits(ctx);\r\n\r\n      if (this._substate === Substate.READY) {\r\n        // These calculations should be fast enough, especially considering\r\n  \t\t\t// that \"READY!\" is only displayed for about 4 seconds.\r\n  \t\t\tvar ready: string = 'READY!';\r\n  \t\t\tvar x: number = (game.getWidth() - ready.length * 9) / 2;\r\n  \t\t\t// Give \"Ready!\" a little nudge to the right.  This is because the\r\n  \t\t\t// ending '!' doesn't fill up the standard 8 pixels for a character,\r\n  \t\t\t// so \"READY!\" looks slightly too far to the left without it.\r\n  \t\t\tx += 3;\r\n        game.drawString(x, 160, ready);\r\n      }\r\n      else if (this._substate === Substate.GAME_OVER) {\r\n        var gameOver: string = 'GAME OVER';\r\n  \t\t\tvar x: number = (game.getWidth() - gameOver.length * 9) / 2;\r\n  \t\t\tgame.drawString(x, 160, gameOver);\r\n      }\r\n\r\n      if (game.paused) {\r\n        ctx.globalAlpha = 0.4;\r\n        ctx.fillStyle = 'black';\r\n        ctx.fillRect(0, 0, game.getWidth(), game.getHeight());\r\n        ctx.globalAlpha = 1;\r\n        ctx.fillRect(50, 100, game.getWidth() - 100, game.getHeight() - 200);\r\n        var paused: string = 'PAUSED';\r\n        var x: number = (game.getWidth() - paused.length * 9) / 2;\r\n        game.drawString(x, (game.getHeight() - 18) / 2, paused);\r\n      }\r\n    }\r\n\r\n    private _handleInput(delta: number, time: number) {\r\n\r\n      this.handleDefaultKeys();\r\n      let input: gtp.InputManager = game.inputManager;\r\n\r\n      if (!game.paused) {\r\n\r\n        switch (this._substate) {\r\n\r\n          case Substate.IN_GAME:\r\n            game.pacman.handleInput(this._maze);\r\n            break;\r\n\r\n          case Substate.GAME_OVER:\r\n            if (input.enter()) {\r\n              game.setState(new pacman.MazeState(this._mazeFile));\r\n            }\r\n            break;\r\n        }\r\n\r\n      }\r\n\r\n      if (time >= this._lastMazeScreenKeypressTime + MazeState.INPUT_REPEAT_MILLIS) {\r\n\r\n        // Enter -> Pause.  Don't check for pausing on \"Game Over\" screen as\r\n        // that will carry over into the next game!\r\n        if (input.enter() && this._substate !== Substate.GAME_OVER) {\r\n          game.paused = !game.paused;\r\n          this._lastMazeScreenKeypressTime = time;\r\n        }\r\n\r\n        // Hidden options (Z + keypress)\r\n        else if (!game.paused && this._substate === Substate.IN_GAME &&\r\n            input.isKeyDown(gtp.Keys.KEY_Z)) {\r\n\r\n          // Z+X => auto-load next level\r\n          if (input.isKeyDown(gtp.Keys.KEY_X)) {\r\n            game.loadNextLevel();\r\n            this._lastMazeScreenKeypressTime = time;\r\n          }\r\n\r\n          // Z+C => auto-death\r\n          else if (input.isKeyDown(gtp.Keys.KEY_C)) {\r\n            if (this._substate !== Substate.DYING) {\r\n              game.startPacmanDying();\r\n              this._substate = Substate.DYING;\r\n              this._nextDyingFrameTime = time + this.DYING_FRAME_DELAY_MILLIS;\r\n              this._lastMazeScreenKeypressTime = time;\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    update(delta: number) {\r\n      super.update(delta);\r\n\r\n      var time: number = gtp.Utils.timestamp();\r\n      this._handleInput(delta, time);\r\n\r\n      switch (this._substate) {\r\n\r\n        case Substate.READY:\r\n          if (this._firstTimeThrough && this._substateStartTime === 0) {\r\n            this._substateStartTime = time;\r\n            game.audio.playSound(pacman.Sounds.OPENING);\r\n          }\r\n          if (time >= this._substateStartTime + this._readyDelayMillis) {\r\n            this._substate = Substate.IN_GAME;\r\n            this._substateStartTime = time;\r\n            game.resetPlayTime();\r\n            game.setLoopedSound(pacman.Sounds.SIREN);\r\n            this._firstTimeThrough = false;\r\n          }\r\n          break;\r\n\r\n        case Substate.IN_GAME:\r\n          this._updateInGameImpl(time);\r\n          break;\r\n\r\n        case Substate.DYING:\r\n          if (time >= this._nextDyingFrameTime) {\r\n            if (!game.pacman.incDying()) {\r\n              if (game.increaseLives(-1) <= 0) {\r\n                this._substate = Substate.GAME_OVER;\r\n              }\r\n              else {\r\n                game.resetPlayTime();\r\n                game.pacman.reset();\r\n                game.resetGhosts(); // Do AFTER resetting play time!\r\n                this._substate = Substate.READY;\r\n                this._substateStartTime = 0; // Play time was just reset\r\n                this._lastSpriteFrameTime = 0;\r\n              }\r\n            }\r\n            else {\r\n              this._nextDyingFrameTime = time + this.DYING_FRAME_DELAY_MILLIS;\r\n            }\r\n          }\r\n          break;\r\n\r\n        case Substate.GAME_OVER:\r\n          // Do nothing\r\n          break;\r\n      }\r\n    }\r\n\r\n    private _updateInGameImpl(time: number) {\r\n\r\n      // If Pacman is eating a ghost, add a slight delay\r\n      if (this._nextUpdateTime > 0 && time < this._nextUpdateTime) {\r\n        return;\r\n      }\r\n      this._nextUpdateTime = 0;\r\n      this._updateScoreIndex = -1;\r\n\r\n      // Don't update sprite frame at each rendered frame; that would be\r\n      // too fast\r\n      if (time >= this._lastSpriteFrameTime + 100) {\r\n        this._lastSpriteFrameTime = time;\r\n        game.updateSpriteFrames();\r\n      }\r\n\r\n      // Update Pacman's, ghosts', and possibly fruit's positions\r\n      game.updateSpritePositions(this._maze, time);\r\n\r\n      // If Pacman hit a ghost, decide what to do\r\n      // TODO\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}