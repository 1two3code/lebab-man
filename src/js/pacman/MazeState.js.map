{"version":3,"sources":["pacman/MazeState.ts"],"names":["pacman","pacman.Substate","pacman.MazeState","pacman.MazeState.constructor","pacman.MazeState.DYING_FRAME_DELAY_MILLIS","pacman.MazeState._readyDelayMillis","pacman.MazeState.enter","pacman.MazeState._paintExtraLives","pacman.MazeState._paintPossibleFruits","pacman.MazeState.render","pacman.MazeState.reset","pacman.MazeState._handleInput","pacman.MazeState.update","pacman.MazeState._updateInGameImpl"],"mappings":"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MA,GAANA,UAAOA,GAA6BA;YAEhCO,gBAAKA,CAACA,MAAMA,YAACA,GAAGA,CAACA,CAACA;YAClBA,IAAIA,CAACA,KAAKA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA;YAEvBA,0DAA0DA;YAC1DA,IAAIA,SAASA,GAAWA,CAACA,CAACA;YAC1BA,IAAIA,KAAKA,GAAWA,IAAIA,CAACA,SAASA,EAAEA,GAAGA,CAACA,GAAGA,SAASA;gBAChDA,aAAIA,CAACA,mBAAmBA,GAAGA,SAASA,CAACA;YACzCA,GAAGA,CAACA,SAASA,CAACA,CAACA,EAAEA,KAAKA,CAACA,CAACA;YAExBA,IAAIA,CAACA,SAASA,CAACA,GAAGA,CAACA,CAACA;YAEpBA,IAAMA,MAAMA,GAAWA,IAAIA,CAACA,MAAMA,CAACA;YACnCA,EAAEA,CAACA,CAACA,IAAIA,CAACA,iBAAiBA,KAAKA,CAACA,CAACA,CAACA,CAACA,CAACA;gBAChCA,EAAEA,CAACA,CAACA,IAAIA,CAACA,SAASA,KAAKA,QAAQA,CAACA,SAASA,CAACA,CAACA,CAACA;oBACxCA,MAAMA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA;gBACvBA,CAACA;YACLA,CAACA;YACDA,IAAIA,CAACA,CAACA;gBACFA,IAAMA,CAACA,GAAWA,MAAMA,CAACA,MAAMA,CAACA,CAACA,CAACA;gBAClCA,IAAMA,CAACA,GAAWA,MAAMA,CAACA,MAAMA,CAACA,CAACA,CAACA;gBAClCA,IAAIA,CAACA,iBAAiBA,CAACA,GAAGA,EAAEA,IAAIA,CAACA,iBAAiBA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA;YAC9DA,CAACA;YAEDA,IAAIA,CAACA,UAAUA,CAACA,GAAGA,CAACA,CAACA;YAErBA,GAAGA,CAACA,SAASA,CAACA,CAACA,EAAEA,CAACA,KAAKA,CAACA,CAACA;YAEzBA,IAAIA,CAACA,UAAUA,CAACA,GAAGA,CAACA,CAACA;YACrBA,IAAIA,CAACA,gBAAgBA,CAACA,GAAGA,CAACA,CAACA;YAC3BA,IAAIA,CAAC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ACA,MAAMA,CAACA;gBAC3BA,IAAIA,CAACA,2BAA2BA,GAAGA,IAAIA,CAACA;gBACxCA,MAAMA,CAACA;YACXA,CAACA;YAEDA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA,CAACA;gBAEfA,MAAMA,CAACA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA;oBAErBA,KAAKA,QAAQA,CAACA,OAAOA;wBACjBA,IAAIA,CAACA,MAAMA,CAACA,WAAWA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA;wBACpCA,KAAKA,CAACA;oBAEVA,KAAKA,QAAQA,CAACA,SAASA;wBACnBA,EAAEA,CAACA,CAACA,KAAKA,CAACA,KAAKA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;4BACpBA,IAAIA,CAACA,QAAQA,CAACA,IAAIA,mBAAUA,CAACA,IAAIA,CAACA,CAACA,CAACA;wBACxCA,CAACA;wBACDA,KAAKA,CAACA;gBACdA,CAACA;YAELA,CAACA;YAEDA,EAAEA,CAACA,CAACA,IAAIA,IAAIA,IAAIA,CAACA,2BAA2BA,GAAGA,SAASA,CAACA,mBAAmBA,CAACA,CAACA,CAACA;gBAE3EA,gCAAgCA;gBAChCA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,MAAMA,IAAIA,IAAIA,CAACA,SAASA,KAAKA,QAAQA,CAACA,OAAOA;oBACnDA,KAAKA,CAACA,SAASA,CAACA,GAAGA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;oBAElCA,8BAA8BA;oBAC9BA,EAAEA,CAACA,CAACA,KAAKA,CAACA,SAASA,CAACA,GAAGA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;wBAClCA,IAAIA,CAACA,aAAaA,EAAEA,CAACA;wBACrBA,IAAIA,CAACA,2BAA2BA,GAAGA,IAAIA,CAACA;oBAC5CA,CAACA;oBAGDA,IAAIA,CAACA,EAAEA,CAACA,CAACA,KAAKA,CAACA,SAASA,CAACA,GAAGA,CAACA,IAAIA,CAACA,KAAKA,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","file":"pacman/MazeState.js","sourcesContent":["module pacman {\r\n    'use strict';\r\n\r\n    enum Substate {\r\n        READY,\r\n        IN_GAME,\r\n        DYING,\r\n        GAME_OVER\r\n    }\r\n\r\n    export class MazeState extends _BaseState {\r\n\r\n        private _mazeFile: number[][];\r\n        private _maze: Maze;\r\n        private _firstTimeThrough: boolean;\r\n        private _updateScoreIndex: number;\r\n        private _substate: Substate;\r\n        private _substateStartTime: number;\r\n        private _nextUpdateTime: number;\r\n        private _nextDyingFrameTime: number;\r\n        private _lastMazeScreenKeypressTime: number;\r\n\r\n        constructor(mazeFile: number[][]) {\r\n            super();\r\n            this._mazeFile = mazeFile;\r\n        }\r\n\r\n        private static get DYING_FRAME_DELAY_MILLIS(): number {\r\n            return 75;\r\n        }\r\n\r\n        private get _readyDelayMillis(): number {\r\n            return this._firstTimeThrough ? 4500 : 2000;\r\n        }\r\n\r\n        enter() {\r\n\r\n            game.pacman.reset();\r\n            game.resetGhosts();\r\n\r\n            this._maze = new Maze(this._mazeFile);\r\n            this._firstTimeThrough = true;\r\n            this._updateScoreIndex = -1;\r\n\r\n            // Prevents the user's \"Enter\" press to start the game from being\r\n            // picked up by our handleInput().\r\n            this._lastMazeScreenKeypressTime = game.playTime + MazeState.INPUT_REPEAT_MILLIS;\r\n\r\n            this._substate = Substate.READY;\r\n            this._firstTimeThrough = true;\r\n            this._substateStartTime = 0;\r\n            this._nextDyingFrameTime = 0;\r\n            this._nextUpdateTime = 0;\r\n            this._lastSpriteFrameTime = 0;\r\n        }\r\n\r\n        private _paintExtraLives(ctx: CanvasRenderingContext2D) {\r\n\r\n            // The indentation on either side of the status stuff at the bottom\r\n            // (extra life count, possible fruits, etc.).\r\n            const BOTTOM_INDENT: number = 24;\r\n            const TILE_SIZE: number = 8;\r\n\r\n            const lives: number = game.lives;\r\n            if (lives > 0) {\r\n                let x: number = BOTTOM_INDENT;\r\n                const y: number = game.getHeight() - 2 * TILE_SIZE;\r\n                const w: number = 2 * TILE_SIZE;\r\n                for (let i: number = 0; i < lives; i++) {\r\n                    game.drawSprite(x, y, 12 * 16, 3 * 16);\r\n                    x += w;\r\n                }\r\n            }\r\n        }\r\n\r\n        private _paintPossibleFruits(ctx: CanvasRenderingContext2D) {\r\n\r\n            // The indentation on either side of the status stuff at the bottom\r\n            // (extra life count, possible fruits, etc.).\r\n            const BOTTOM_INDENT: number = 12;\r\n            const TILE_SIZE: number = PacmanGame.TILE_SIZE;\r\n\r\n            let x: number = game.getWidth() - BOTTOM_INDENT - 2 * TILE_SIZE;\r\n            let y: number = game.getHeight() - 2 * TILE_SIZE;\r\n\r\n            switch (game.level) {\r\n                default:\r\n                case 7: // Key\r\n                    game.drawSprite(x - 112, y, 13 * 16, 3 * 16);\r\n                // Fall through\r\n                case 6: // Space Invaders ship\r\n                    game.drawSprite(x - 96, y, 13 * 16, 6 * 16);\r\n                // Fall through\r\n                case 5: // Green thing (grapes?)\r\n                    game.drawSprite(x - 80, y, 12 * 16, 6 * 16);\r\n                // Fall through.\r\n                case 4: // Apple\r\n                    game.drawSprite(x - 64, y, 13 * 16, 2 * 16);\r\n                // Fall through.\r\n                case 3: // Yellow bell\r\n                    game.drawSprite(x - 48, y, 13 * 16, 5 * 16);\r\n                // Fall through.\r\n                case 2: // Peach\r\n                    game.drawSprite(x - 32, y, 12 * 16, 5 * 16);\r\n                // Fall through.\r\n                case 1: // Strawberry\r\n                    game.drawSprite(x - 16, y, 13 * 16, 4 * 16);\r\n                // Fall through.\r\n                case 0: // Cherry\r\n                    game.drawSprite(x, y, 12 * 16, 4 * 16);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        render(ctx: CanvasRenderingContext2D) {\r\n\r\n            super.render(ctx);\r\n            this._maze.render(ctx);\r\n\r\n            // \"window.pacman\" because of hoisting of pacman let below\r\n            let TILE_SIZE: number = 8;\r\n            let mazeY: number = game.getHeight() - 2 * TILE_SIZE -\r\n                Maze.TILE_COUNT_VERTICAL * TILE_SIZE;\r\n            ctx.translate(0, mazeY);\r\n\r\n            game.drawFruit(ctx);\r\n\r\n            const pacman: Pacman = game.pacman;\r\n            if (this._updateScoreIndex === -1) {\r\n                if (this._substate !== Substate.GAME_OVER) {\r\n                    pacman.render(ctx);\r\n                }\r\n            }\r\n            else {\r\n                const x: number = pacman.bounds.x;\r\n                const y: number = pacman.bounds.y;\r\n                game.paintPointsEarned(ctx, this._updateScoreIndex, x, y);\r\n            }\r\n\r\n            game.drawGhosts(ctx);\r\n\r\n            ctx.translate(0, -mazeY);\r\n\r\n            game.drawScores(ctx);\r\n            this._paintExtraLives(ctx);\r\n            this._paintPossibleFruits(ctx);\r\n\r\n            if (this._substate === Substate.READY) {\r\n                // These calculations should be fast enough, especially considering\r\n                // that \"READY!\" is only displayed for about 4 seconds.\r\n                let ready: string = 'READY!';\r\n                let x: number = (game.getWidth() - ready.length * 9) / 2;\r\n                // Give \"Ready!\" a little nudge to the right.  This is because the\r\n                // ending '!' doesn't fill up the standard 8 pixels for a character,\r\n                // so \"READY!\" looks slightly too far to the left without it.\r\n                x += 3;\r\n                game.drawString(x, 160, ready);\r\n            }\r\n            else if (this._substate === Substate.GAME_OVER) {\r\n                let gameOver: string = 'GAME OVER';\r\n                let x: number = (game.getWidth() - gameOver.length * 9) / 2;\r\n                game.drawString(x, 160, gameOver);\r\n            }\r\n\r\n            if (game.paused) {\r\n                ctx.globalAlpha = 0.4;\r\n                ctx.fillStyle = 'black';\r\n                ctx.fillRect(0, 0, game.getWidth(), game.getHeight());\r\n                ctx.globalAlpha = 1;\r\n                ctx.fillRect(50, 100, game.getWidth() - 100, game.getHeight() - 200);\r\n                let paused: string = 'PAUSED';\r\n                let x: number = (game.getWidth() - paused.length * 9) / 2;\r\n                game.drawString(x, (game.getHeight() - 18) / 2, paused);\r\n            }\r\n        }\r\n\r\n        reset() {\r\n            this._maze.reset();\r\n            game.resetPlayTime();\r\n            game.pacman.reset();\r\n            game.resetGhosts(); // Do AFTER resetting playtime!\r\n            this._substate = Substate.READY;\r\n            this._substateStartTime = 0; // Play time was just reset\r\n            this._lastSpriteFrameTime = 0;\r\n\r\n            // Prevents the user's \"Enter\" press to start the game from being\r\n            // picked up by our handleInput().\r\n            this._lastMazeScreenKeypressTime = game.playTime + MazeState.INPUT_REPEAT_MILLIS;\r\n        }\r\n\r\n        private _handleInput(delta: number, time: number) {\r\n\r\n            this.handleDefaultKeys();\r\n            let input: gtp.InputManager = game.inputManager;\r\n\r\n            // Enter -> Pause.  Don't check for pausing on \"Game Over\" screen as\r\n            // that will carry over into the next game!\r\n            if (this._substate !== Substate.GAME_OVER && input.enter(true)) {\r\n                game.paused = !game.paused;\r\n                this._lastMazeScreenKeypressTime = time;\r\n                return;\r\n            }\r\n\r\n            if (!game.paused) {\r\n\r\n                switch (this._substate) {\r\n\r\n                    case Substate.IN_GAME:\r\n                        game.pacman.handleInput(this._maze);\r\n                        break;\r\n\r\n                    case Substate.GAME_OVER:\r\n                        if (input.enter(true)) {\r\n                            game.setState(new TitleState(game));\r\n                        }\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n            if (time >= this._lastMazeScreenKeypressTime + MazeState.INPUT_REPEAT_MILLIS) {\r\n\r\n                // Hidden options (Z + keypress)\r\n                if (!game.paused && this._substate === Substate.IN_GAME &&\r\n                    input.isKeyDown(gtp.Keys.KEY_Z)) {\r\n\r\n                    // Z+X => auto-load next level\r\n                    if (input.isKeyDown(gtp.Keys.KEY_X)) {\r\n                        game.loadNextLevel();\r\n                        this._lastMazeScreenKeypressTime = time;\r\n                    }\r\n\r\n                    // Z+C => auto-death\r\n                    else if (input.isKeyDown(gtp.Keys.KEY_C)) {\r\n                        if (this._substate !== Substate.DYING) {\r\n                            game.startPacmanDying();\r\n                            this._substate = Substate.DYING;\r\n                            this._nextDyingFrameTime = time + MazeState.DYING_FRAME_DELAY_MILLIS;\r\n                            this._lastMazeScreenKeypressTime = time;\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        update(delta: number) {\r\n            super.update(delta);\r\n\r\n            // playTime may reset in handleInput, so we fetch it again afterward\r\n            this._handleInput(delta, game.playTime);\r\n            const time: number = game.playTime;\r\n\r\n            switch (this._substate) {\r\n\r\n                case Substate.READY:\r\n                    if (this._firstTimeThrough && this._substateStartTime === 0) {\r\n                        this._substateStartTime = time;\r\n                        game.audio.playSound(Sounds.OPENING);\r\n                    }\r\n                    if (time >= this._substateStartTime + this._readyDelayMillis) {\r\n                        this._substate = Substate.IN_GAME;\r\n                        this._substateStartTime = time;\r\n                        game.resetPlayTime();\r\n                        this._lastMazeScreenKeypressTime = game.playTime;\r\n                        game.setLoopedSound(Sounds.SIREN);\r\n                        this._firstTimeThrough = false;\r\n                    }\r\n                    break;\r\n\r\n                case Substate.IN_GAME:\r\n                    this._updateInGameImpl(time);\r\n                    break;\r\n\r\n                case Substate.DYING:\r\n                    if (time >= this._nextDyingFrameTime) {\r\n                        if (!game.pacman.incDying()) {\r\n                            if (game.increaseLives(-1) <= 0) {\r\n                                this._substate = Substate.GAME_OVER;\r\n                            }\r\n                            else {\r\n                                game.resetPlayTime();\r\n                                this._lastMazeScreenKeypressTime = game.playTime;\r\n                                game.pacman.reset();\r\n                                game.resetGhosts(); // Do AFTER resetting play time!\r\n                                this._substate = Substate.READY;\r\n                                this._substateStartTime = 0; // Play time was just reset\r\n                                this._lastSpriteFrameTime = 0;\r\n                            }\r\n                        }\r\n                        else {\r\n                            this._nextDyingFrameTime = time + MazeState.DYING_FRAME_DELAY_MILLIS;\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case Substate.GAME_OVER:\r\n                    // Do nothing\r\n                    break;\r\n            }\r\n        }\r\n\r\n        private _updateInGameImpl(time: number) {\r\n\r\n            // If Pacman is eating a ghost, add a slight delay\r\n            if (this._nextUpdateTime > 0 && time < this._nextUpdateTime) {\r\n                return;\r\n            }\r\n            this._nextUpdateTime = 0;\r\n            this._updateScoreIndex = -1;\r\n\r\n            this._updateSpriteFrames();\r\n\r\n            // Update Pacman's, ghosts', and possibly fruit's positions\r\n            game.updateSpritePositions(this._maze, time);\r\n\r\n            // If Pacman hit a ghost, decide what to do\r\n            let ghostHit: Ghost = game.checkForCollisions();\r\n            if (ghostHit) {\r\n\r\n                switch (ghostHit.motionState) {\r\n\r\n                    case MotionState.BLUE:\r\n                        this._nextUpdateTime = time + PacmanGame.SCORE_DISPLAY_LENGTH;\r\n                        ghostHit.motionState = MotionState.EYES;\r\n                        this._updateScoreIndex = game.ghostEaten(ghostHit);\r\n                        break;\r\n\r\n                    case MotionState.EYES:\r\n                    case MotionState.EYES_ENTERING_BOX:\r\n                        // Do nothing\r\n                        break;\r\n\r\n                    default:\r\n                        if (!game.godMode) {\r\n                            game.startPacmanDying();\r\n                            this._substate = Substate.DYING;\r\n                            this._nextDyingFrameTime = game.playTime + MazeState.DYING_FRAME_DELAY_MILLIS;\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}